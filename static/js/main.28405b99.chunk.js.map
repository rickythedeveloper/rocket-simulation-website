{"version":3,"sources":["utils/Position.ts","models/Vector2D.ts","models/bodies/constants.ts","assets/rocket.svg","components/PilotView/Rocket/VelocityIndicator.tsx","utils/index.ts","components/generic/Particles.tsx","components/PilotView/Rocket/ThrustParticle.tsx","components/PilotView/Rocket/index.tsx","components/PilotView/Stars.tsx","components/PilotView/FlightInfoDisplay.tsx","components/PilotView/Section.tsx","assets/directionArrow.svg","components/PilotView/index.tsx","utils/KeyboardStates.ts","models/Simulator.ts","models/Body.ts","models/bodies/Earth.ts","models/bodies/Rocket.ts","constants/colors.ts","components/generic/GenericButton.tsx","components/generic/Modal.tsx","data/sections/index.ts","data/sections/helloSection.tsx","components/SimulatorScreen.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getDistanceBetween","a","b","Math","sqrt","x","y","angleOfPosition","position","PI","angleRadians","atan","relativePosition","from","to","Vector2D","this","magnitude","vector","scale","normalised","scaled","total","vectors","EARTH_RADIUS","EARTH_MASS","ROCKET_HALF_HEIGHT","ROCKET_HEIGHT","ROCKET_HALF_WIDTH","ROCKET_WIDTH","VelocityIndicator","containerStyle","width","props","arrowOuterRadius","height","transform","angularPosition","style","arrowLength","arrowInnerRadius","arrowStyle","left","viewBox","version","xmlns","id","stroke","strokeWidth","fill","fillRule","strokeLinecap","strokeLinejoin","d","React","Component","randomNumberBetween","random","arrayWithRemovedIndices","array","indices","sort","lhs","rhs","newArray","forEach","index","slice","concat","length","arrayWithRemovedIndex","edgeCoordsWithAngle","angle","elementWidth","elementHeight","padding","availableHeight","availableWidth","halfAvailableHeight","halfAvailableWidth","cornerAngle","tan","Particles","particleInterval","state","particleStates","particles","missingIndices","setInterval","rollForward","bind","clearInterval","updateMissingIndices","cleanParticleStates","addParticlesStates","updateParticleStates","updateParticles","currentProb","config","existenceFunction","time","deathProb","push","setState","prev","missingCount","numberOfParticles","estimate","particleDurationEstimate","additionalParticleStates","i","min","initialPosition","map","particleState","updatePosition","Error","generateParticle","particle","generateParticleComponent","top","ThrustParticle","size","lifecycle","backgroundColor","gb","getColor","borderRadius","THRUST_PARTICLE_DURATION","thrustParticleUpdatePosition","pos","dt","thrustParticlesCommonStyle","thrustDirection","bottom","thrustParticleExistenceFunction","getThrustParticle","thrustParticleInitialPosition","thrustParticlesConfig","thrustStrength","Rocket","rocketStyle","alignItems","justifyContent","display","objectFit","className","src","rocketImage","maxWidth","maxHeight","rocket","velocity","right","Stars","stars","ref","el","clientWidth","clientHeight","numStars","density","minSize","maxSize","DEFAULT_STATE","FlightInfoDisplay","speed","round","rocketPosition","Section","radius","border","titleStyle","color","contentScale","title","rocketCenterHeight","rocketImageAngle","currentSection","viewWidth","viewHeight","MAX_HEIGHT_COLOR","MIN_SCALE","MIN_SCALE_WITHOUT_LIGHT_EFFECT","getRocketHeight","minHeight","Infinity","testPoints","point","heightOfPoint","sum","undefined","KeyState","PilotView","newCurrentSection","sections","section","showSection","lightStrength","strength","getLightStrength","landStyle","transformOrigin","sec","relativePositionToSection","sectionIndicators","distance","relativePositionFromCenter","abs","max","directionArrow","onWheel","e","newScale","deltaY","GRAVITATIONAL_CONSTANT","Simulator","bodies","massiveBody","force","otherBody","vectorToOtherBody","vectorTo","forceMagnitude","mass","additionalForce","withMagnitude","forces","calculateForces","newState","getNewState","additionalTorque","willCollide","boundaryFunction","j","testPoint","positionFromOtherBody","collisionHandler","Body","angularMomentOfInertia","zero","angularVelocity","canMove","torque","acceleration","angularAcceleration","positionDelta","velocityDelta","angularPositionDelta","angularVelocityDelta","Earth","offset","_thrustStrength","_thrustDirection","thrust","rocketDirection","ROCKET_MASS","value","sin","cos","rocketLeftDirection","KeyboardStates","keyStates","key","downCallback","upCallback","holdCallback","Object","keys","up","document","addEventListener","event","down","themeColors","blue","xLight","light","mediumLight","medium","mediumDark","dark","xDark","BACKGROUND_COLOR_DEFAULT","BACKGROUND_COLOR_SELECTED","isTouched","GenericButton","margin","onClick","onTouchStart","onTouchEnd","children","Modal","isShown","didTouchOutside","stopPropagation","content","simulationIsRunning","modalIsShown","modalContent","SimulatorScreen","simulator","simulatorInterval","earth","setBodies","addKeyboardListeners","SIMULATION_DT","keyboardListener","addKey","setFullThrust","setNoThrust","setTorqueAnticlockwise","setNoTorque","setTorqueClockwise","buttonsContainer","flexDirection","gap","pauseOrResumeSimulation","showModal","resetSimulation","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.28405b99.chunk.js","sourcesContent":["export default interface Position {\n\tx: number;\n\ty: number;\n}\n\nexport function getDistanceBetween(a: Position, b: Position): number {\n\treturn Math.sqrt((a.x - b.x) ** 2 + (a.y - b.y) ** 2);\n}\n\nexport function angleOfPosition(position: Position): number {\n\tif (position.x === 0) {\n\t\treturn position.y > 0 ? Math.PI / 2 : -Math.PI / 2;\n\t}\n\tconst angleRadians = Math.atan(position.y / position.x);\n\tif (position.x > 0) return angleRadians;\n\treturn angleRadians + (position.y > 0 ? 1 : -1) * Math.PI;\n}\n\nexport function relativePosition(from: Position, to: Position) {\n\treturn { x: to.x - from.x, y: to.y - from.y };\n}\n","import Position, { angleOfPosition, getDistanceBetween } from '../utils/Position';\n\nexport default class Vector2D implements Position {\n\tget magnitude() {return getDistanceBetween({ x:0, y:0 }, this);}\n\n\tget normalised() {\n\t\tconst magnitude = this.magnitude;\n\t\treturn new Vector2D(this.x / magnitude, this.y / magnitude);\n\t}\n\n\tget angle(): number { return angleOfPosition(this); }\n\n\tconstructor(public x: number, public y: number) {}\n\n\tstatic sum(...vectors: Vector2D[]): Vector2D {\n\t\tconst total = { x: 0, y: 0 };\n\t\tfor (const vector of vectors) {\n\t\t\ttotal.x += vector.x;\n\t\t\ttotal.y += vector.y;\n\t\t}\n\t\treturn new Vector2D(total.x, total.y);\n\t}\n\n\tstatic zero(): Vector2D { return new Vector2D(0, 0); }\n\n\tstatic distanceBetween(a: Vector2D, b: Vector2D): number { return getDistanceBetween(a, b); }\n\n\tvectorTo(vector: Vector2D): Vector2D { return new Vector2D(vector.x - this.x, vector.y - this.y); }\n\n\tscaled(scale: number): Vector2D { return new Vector2D(this.x * scale, this.y * scale); }\n\n\twithMagnitude(magnitude: number): Vector2D { return this.normalised.scaled(magnitude); }\n}\n","export const EARTH_RADIUS = 6371000;\nexport const EARTH_MASS = 6 * 10 ** 24;\nexport const ROCKET_MASS = 1000;\nexport const ROCKET_HEIGHT = 350;\nexport const ROCKET_HALF_HEIGHT = ROCKET_HEIGHT / 2;\nexport const ROCKET_WIDTH = ROCKET_HEIGHT * 0.15;\nexport const ROCKET_HALF_WIDTH = ROCKET_WIDTH / 2;\nexport const ROCKET_MAX_THRUST = ROCKET_MASS * 20;\n","export default __webpack_public_path__ + \"static/media/rocket.e9629d5d.svg\";","import React, { CSSProperties } from 'react';\n\ninterface Props {\n\tarrowInnerRadius: number;\n\tarrowOuterRadius: number;\n\tangularPosition: number;\n\tstyle?: CSSProperties;\n}\n\nconst ARROW_MAX_WIDTH = 20;\nexport default class VelocityIndicator extends React.Component<Props> {\n\trender() {\n\t\tconst containerStyle: CSSProperties = {\n\t\t\twidth: `${this.props.arrowOuterRadius * 2}px`,\n\t\t\theight: `${ARROW_MAX_WIDTH}px`,\n\t\t\ttransform: `rotateZ(${-this.props.angularPosition * 180 / Math.PI}deg)`,\n\t\t\t...this.props.style,\n\t\t};\n\t\tconst arrowLength = this.props.arrowOuterRadius - this.props.arrowInnerRadius;\n\t\tconst arrowStyle: CSSProperties = {\n\t\t\twidth: `${arrowLength}px`,\n\t\t\theight: `${ARROW_MAX_WIDTH}px`,\n\t\t\tleft: `${this.props.arrowOuterRadius + this.props.arrowInnerRadius}px`,\n\t\t\tposition: 'absolute',\n\t\t};\n\t\tconst arrowColor = '#fff'; // TODO #33 dynamically change color\n\n\t\treturn (\n\t\t\t<div style={containerStyle}>\n\t\t\t\t{/* eslint-disable max-len */}\n\t\t\t\t<svg style={arrowStyle} viewBox=\"0 0 756 273\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<title>arrow</title>\n\t\t\t\t\t<g id=\"arrow\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n\t\t\t\t\t\t<path d=\"M36.5,135.5 L719.5,135.5 M718.847561,135.5 L532.152439,243.5 M718.847561,135.5 L532.152439,28.5\" id=\"Combined-Shape\" stroke={arrowColor} strokeWidth=\"50\"></path>\n\t\t\t\t\t</g>\n\t\t\t\t</svg>\n\t\t\t\t{/* eslint-enable max-len */}\n\t\t\t</div>\n\t\t);\n\t}\n}\n","export function randomNumberBetween(a: number, b: number): number {\n\treturn a + (b - a) * Math.random();\n}\n\nexport function arrayWithRemovedIndex<T>(array: Array<T>, index: number): Array<T> {\n\treturn array.slice(0, index).concat(array.slice(index + 1, array.length));\n}\n\nexport function arrayWithRemovedIndices<T>(array: Array<T>, indices: number[]): Array<T> {\n\tindices.sort((lhs, rhs) => rhs - lhs);\n\tlet newArray: Array<T> = array;\n\tindices.forEach(index => {\n\t\tnewArray = arrayWithRemovedIndex(newArray, index);\n\t});\n\treturn newArray;\n}\n\nexport function edgeCoordsWithAngle(\n\tangle: number,\n\telementWidth: number,\n\telementHeight: number,\n\tpadding: number,\n): { x: number; y: number } {\n\tconst availableHeight = elementHeight - padding * 2, availableWidth = elementWidth - padding * 2;\n\tconst halfAvailableHeight = availableHeight / 2, halfAvailableWidth = availableWidth / 2;\n\tconst cornerAngle = Math.atan(availableHeight / availableWidth);\n\tif (angle <= -Math.PI) return edgeCoordsWithAngle(angle + 2 * Math.PI, elementWidth, elementHeight, padding);\n\tif (angle <= -Math.PI + cornerAngle) {\n\t\treturn {\n\t\t\tx: padding,\n\t\t\ty: padding + halfAvailableHeight + halfAvailableWidth * Math.tan(angle),\n\t\t};\n\t}\n\tif (angle <= -cornerAngle) {\n\t\treturn {\n\t\t\tx: padding + halfAvailableWidth - halfAvailableHeight / Math.tan(angle),\n\t\t\ty: elementHeight - padding,\n\t\t};\n\t}\n\tif (angle <= cornerAngle) {\n\t\treturn {\n\t\t\tx: elementWidth - padding,\n\t\t\ty: padding + halfAvailableHeight - halfAvailableWidth * Math.tan(angle),\n\t\t};\n\t}\n\tif (angle <= Math.PI - cornerAngle) {\n\t\treturn {\n\t\t\tx: padding + halfAvailableHeight / Math.tan(angle) + halfAvailableWidth,\n\t\t\ty: padding,\n\t\t};\n\t}\n\tif (angle <= Math.PI) {\n\t\treturn {\n\t\t\tx: padding,\n\t\t\ty: padding + halfAvailableHeight + halfAvailableWidth * Math.tan(angle),\n\t\t};\n\t}\n\treturn edgeCoordsWithAngle(angle - 2 * Math.PI, elementWidth, elementHeight, padding);\n}\n","import React, { CSSProperties } from 'react';\nimport Position from '../../utils/Position';\nimport { arrayWithRemovedIndices } from '../../utils/index';\n\nexport interface ParticlesConfig {\n\tnumberOfParticles: number;\n\tparticleDurationEstimate: number;\n\texistenceFunction: (time: number) => number;\n\tgenerateParticleComponent: (time: number) => React.ReactElement;\n\tupdatePosition: (position: Position, dt: number) => Position;\n\tinitialPosition: () => Position;\n}\n\ninterface Props {\n\tconfig: ParticlesConfig;\n\tstyle?: CSSProperties;\n}\n\ninterface ParticleState {\n\tid: number;\n\tposition: Position;\n\ttime: number; // time passed for each particle\n}\ninterface State {\n\tparticleStates: ParticleState[];\n\tparticles: JSX.Element[];\n\tmissingIndices: number[];\n}\n\nconst PARTICLE_UPDATE_INTERVAL = 30; // in millis\n\nexport default class Particles extends React.Component<Props, State> {\n\tparticleInterval?: NodeJS.Timer;\n\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tparticleStates: [],\n\t\t\tparticles: [],\n\t\t\tmissingIndices: [],\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.particleInterval = setInterval(this.rollForward.bind(this), PARTICLE_UPDATE_INTERVAL);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif (this.particleInterval) clearInterval(this.particleInterval);\n\t}\n\n\trollForward() {\n\t\tthis.updateMissingIndices();\n\t\tthis.cleanParticleStates();\n\t\tthis.addParticlesStates();\n\t\tthis.updateParticleStates();\n\t\tthis.updateParticles();\n\t}\n\n\t/**\n\t * Update missing indices based on the existence function\n\t */\n\tupdateMissingIndices() {\n\t\tconst missingIndices: number[] = [];\n\t\tthis.state.particleStates.forEach((state, index) => {\n\t\t\tconst currentProb = this.props.config.existenceFunction(state.time);\n\t\t\tconst nextProb = this.props.config.existenceFunction(state.time + PARTICLE_UPDATE_INTERVAL);\n\t\t\tconst deathProb = 1 - nextProb / currentProb;\n\t\t\tif (Math.random() < deathProb) {\n\t\t\t\tmissingIndices.push(index);\n\t\t\t}\n\t\t});\n\t\tthis.setState({\n\t\t\tmissingIndices: missingIndices,\n\t\t});\n\t}\n\n\t/**\n\t * Clear the particle states for the particles that weren't used in the last render,\n\t */\n\tcleanParticleStates() {\n\t\tthis.setState((prev) => {\n\t\t\treturn {\n\t\t\t\tparticleStates: arrayWithRemovedIndices(prev.particleStates, prev.missingIndices),\n\t\t\t\tmissingIndices: [],\n\t\t\t};\n\t\t});\n\t}\n\n\t/**\n\t * Add some (or all) of 'missing' particle states.\n\t */\n\taddParticlesStates() {\n\t\tconst target = this.props.config.numberOfParticles;\n\t\tconst current = this.state.particles.length;\n\t\tconst missingCount = target - current;\n\t\tconst estimate =\n\t\t\tthis.props.config.numberOfParticles\n\t\t\t* (PARTICLE_UPDATE_INTERVAL / this.props.config.particleDurationEstimate);\n\n\t\tconst additionalParticleStates: ParticleState[] = [];\n\t\tfor (let i = 0; i < Math.min(missingCount, estimate); i++) {\n\t\t\tadditionalParticleStates.push({\n\t\t\t\tid: Math.random(),\n\t\t\t\tposition: this.props.config.initialPosition(),\n\t\t\t\ttime: 0,\n\t\t\t});\n\t\t}\n\t\tthis.setState((prev) => {\n\t\t\treturn {\n\t\t\t\tparticleStates: prev.particleStates.concat(additionalParticleStates),\n\t\t\t};\n\t\t});\n\t}\n\n\t/**\n\t * Update the particle states while keeping the id unchanged\n\t */\n\tupdateParticleStates() {\n\t\tthis.setState(\n\t\t\t(prev) => {\n\t\t\t\treturn {\n\t\t\t\t\tparticleStates: prev.particleStates.map(particleState => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tid: particleState.id,\n\t\t\t\t\t\t\tposition: this.props.config.updatePosition(\n\t\t\t\t\t\t\t\tparticleState.position,\n\t\t\t\t\t\t\t\tPARTICLE_UPDATE_INTERVAL,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ttime: particleState.time + PARTICLE_UPDATE_INTERVAL,\n\t\t\t\t\t\t};\n\t\t\t\t\t}),\n\t\t\t\t};\n\t\t\t},\n\t\t);\n\t}\n\n\tfindIndexOfParticleState(id: number) {\n\t\tfor (let i = 0; i < this.state.particleStates.length; i++) {\n\t\t\tif (this.state.particleStates[i].id === id) return i;\n\t\t}\n\t\tthrow new Error(`Could not find particle state with id ${id}`);\n\t}\n\n\t/**\n\t * Given a list of particle states, regenerate the particles\n\t * and save particles and missing indices.\n\t */\n\tupdateParticles(): void {\n\t\tconst particles: JSX.Element[] = this.state.particleStates.map(\n\t\t\t(particleState) => this.generateParticle(particleState),\n\t\t);\n\n\t\tthis.setState({\n\t\t\tparticles: particles,\n\t\t});\n\t}\n\n\t/**\n\t * Given a particle state, generate particle component, add style and return it.\n\t * @param position\n\t * @param time\n\t * @returns\n\t */\n\tgenerateParticle(particleState: ParticleState): JSX.Element {\n\t\tconst particle = this.props.config.generateParticleComponent(particleState.time);\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\tleft: particleState.position.x,\n\t\t\t\t\ttop: particleState.position.y,\n\t\t\t\t\ttransform: 'translate(-50%, -50%)',\n\t\t\t\t}}\n\t\t\t\tkey={particleState.id}\n\t\t\t>\n\t\t\t\t{particle}\n\t\t\t</div>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst containerStyle: CSSProperties = {\n\t\t\t...this.props.style,\n\t\t};\n\n\t\treturn (\n\t\t\t<div style={containerStyle}>\n\t\t\t\t{this.state.particles}\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { CSSProperties } from 'react';\n\ninterface Props {\n\tlifecycle: number; // between 0 and 1\n\tstyle?: CSSProperties;\n}\n\nconst MAX_SIZE = 13;\n\nfunction getSize(lifecycle: number): number {\n\treturn MAX_SIZE * (1 - lifecycle);\n}\n\nfunction getColor(lifecycle: number): string {\n\tconst initialGB = 0;\n\tconst gb = initialGB + (255 - initialGB) * lifecycle;\n\treturn `rgba(255, ${gb}, ${gb})`;\n}\n\nexport default class ThrustParticle extends React.Component<Props> {\n\n\trender() {\n\t\tconst size = getSize(this.props.lifecycle);\n\t\tconst backgroundColor = getColor(this.props.lifecycle);\n\t\tconst containerStyle: CSSProperties = {\n\t\t\twidth: size,\n\t\t\theight: size,\n\t\t\tborderRadius: size / 2,\n\t\t\tbackgroundColor,\n\t\t\t...this.props.style,\n\t\t};\n\t\treturn (\n\t\t\t<div style={containerStyle}/>\n\t\t);\n\t}\n}\n","import React, { CSSProperties } from 'react';\nimport rocketImage from '../../../assets/rocket.svg';\nimport VelocityIndicator from './VelocityIndicator';\nimport RocketModel from '../../../models/bodies/Rocket';\nimport Particles, { ParticlesConfig } from '../../generic/Particles';\nimport ThrustParticle from './ThrustParticle';\nimport Position from '../../../utils/Position';\n\ninterface Props {\n\trocket: RocketModel;\n\tstyle?: CSSProperties;\n}\ninterface State {}\n\nconst THRUST_PARTICLE_DURATION = 250;\nconst THRUST_PARTICLE_SPEED = 0.6; // 'Pixels' per millisecond\nconst THRUST_PARTICLE_COUNT = 60;\nconst THRUST_WIDTH = 10;\nconst THRUST_MARGIN = '15%';\n\nconst thrustParticleUpdatePosition = (pos: Position, dt: number) => {\n\treturn { x: pos.x, y: pos.y + dt * THRUST_PARTICLE_SPEED };\n};\nconst thrustParticlesCommonStyle = (thrustDirection: number): CSSProperties => {\n\treturn {\n\t\tposition: 'absolute',\n\t\tbottom: 12,\n\t\twidth: THRUST_WIDTH,\n\t\ttransform: `rotateZ(${-thrustDirection * 180 / Math.PI}deg)`,\n\t};\n};\nconst thrustParticleExistenceFunction = (time: number) => {\n\treturn (THRUST_PARTICLE_DURATION - time) / THRUST_PARTICLE_DURATION;\n};\nconst getThrustParticle = (time: number) => (\n\t<ThrustParticle lifecycle={time / THRUST_PARTICLE_DURATION}/>\n);\nconst thrustParticleInitialPosition = () => {\n\treturn { x: Math.random() * THRUST_WIDTH, y: Math.random() * 20 };\n};\nconst thrustParticlesConfig = (thrustStrength: number): ParticlesConfig => {\n\treturn {\n\t\tnumberOfParticles: thrustStrength * THRUST_PARTICLE_COUNT,\n\t\tparticleDurationEstimate: THRUST_PARTICLE_DURATION,\n\t\texistenceFunction: thrustParticleExistenceFunction,\n\t\tgenerateParticleComponent: getThrustParticle,\n\t\tupdatePosition: thrustParticleUpdatePosition,\n\t\tinitialPosition: thrustParticleInitialPosition,\n\t};\n};\n\nexport default class Rocket extends React.Component<Props, State> {\n\trender() {\n\t\tconst rocketStyle: CSSProperties = {\n\t\t\talignItems: 'center',\n\t\t\tjustifyContent: 'center',\n\t\t\tdisplay: 'flex',\n\t\t\tobjectFit: 'contain',\n\t\t\t...this.props.style,\n\t\t};\n\t\treturn (\n\t\t\t<div className={'rocket'} style={rocketStyle}>\n\t\t\t\t<img src={rocketImage} style={{\n\t\t\t\t\tmaxWidth: '100%',\n\t\t\t\t\tmaxHeight: '100%',\n\t\t\t\t}}/>\n\t\t\t\t<VelocityIndicator\n\t\t\t\t\tarrowInnerRadius={180}\n\t\t\t\t\tarrowOuterRadius={280}\n\t\t\t\t\tangularPosition={\n\t\t\t\t\t\tthis.props.rocket.state.velocity.angle\n\t\t\t\t\t\t\t- this.props.rocket.state.angularPosition\n\t\t\t\t\t\t\t+ Math.PI / 2\n\t\t\t\t\t}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Particles style={{\n\t\t\t\t\t...thrustParticlesCommonStyle(this.props.rocket.thrustDirection),\n\t\t\t\t\tleft: THRUST_MARGIN,\n\t\t\t\t}} config={thrustParticlesConfig(this.props.rocket.thrustStrength)}/>\n\t\t\t\t<Particles style={{\n\t\t\t\t\t...thrustParticlesCommonStyle(this.props.rocket.thrustDirection),\n\t\t\t\t\tright: THRUST_MARGIN,\n\t\t\t\t}} config={thrustParticlesConfig(this.props.rocket.thrustStrength)}/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { CSSProperties } from 'react';\nimport { randomNumberBetween } from '../../utils';\n\ninterface Props {\n\tdensity: number;\n\tminSize: number;\n\tmaxSize: number;\n\tstyle?: CSSProperties;\n}\n\ninterface State {\n\tstars: JSX.Element[] | null;\n}\n\nexport default class Stars extends React.Component<Props, State> {\n\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tstars: null,\n\t\t};\n\t}\n\n\trender() {\n\t\tconst containerStyle: CSSProperties = {\n\t\t\t...this.props.style,\n\t\t};\n\t\treturn (\n\t\t\t<div style={containerStyle} ref={(el) => {\n\t\t\t\tif (el && this.state.stars === null) {\n\t\t\t\t\tconst width = el.clientWidth, height = el.clientHeight;\n\t\t\t\t\tconst stars: JSX.Element[] = [];\n\t\t\t\t\tconst numStars = this.props.density * width * height / 10000;\n\t\t\t\t\tfor (let i = 0; i < numStars; i++) {\n\t\t\t\t\t\tconst size = randomNumberBetween(this.props.minSize, this.props.maxSize);\n\t\t\t\t\t\tstars.push(\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\t\ttop: Math.random() * height,\n\t\t\t\t\t\t\t\t\tleft: Math.random() * width,\n\t\t\t\t\t\t\t\t\twidth: size,\n\t\t\t\t\t\t\t\t\theight: size,\n\t\t\t\t\t\t\t\t\tborderRadius: size / 2,\n\t\t\t\t\t\t\t\t\tbackgroundColor: `rgba(255, 255, 255, ${randomNumberBetween(0.3, 0.7)})`,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tstars: stars,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}}>\n\t\t\t\t{this.state.stars}\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { CSSProperties } from 'react';\nimport Vector2D from '../../models/Vector2D';\n\ninterface Props {\n\tspeed: number;\n\theight: number;\n\trocketPosition: Vector2D;\n\tstyle?: CSSProperties;\n}\ninterface State {}\nconst DEFAULT_STATE = {};\n\nexport default class FlightInfoDisplay extends React.Component<Props, State> {\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.state = DEFAULT_STATE;\n\t}\n\n\trender() {\n\t\tconst containerStyle: CSSProperties = {\n\t\t\tbackgroundColor: '#7774',\n\t\t\tborderRadius: 10,\n\t\t\tpadding: 10,\n\t\t\t...this.props.style,\n\t\t};\n\t\treturn (\n\t\t\t<div style={containerStyle}>\n\t\t\t\t<div>{`Speed: ${this.props.speed}`}</div>\n\t\t\t\t<div>{`Height: ${this.props.height}`}</div>\n\t\t\t\t<div>{`x: ${Math.round(this.props.rocketPosition.x)}`}</div>\n\t\t\t\t<div>{`y: ${Math.round(this.props.rocketPosition.y)}`}</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { CSSProperties } from 'react';\n\ninterface Props {\n\ttitle: string;\n\tradius: number;\n\tcontentScale: number;\n\tstyle?: CSSProperties;\n}\n\nexport default class Section extends React.Component<Props> {\n\n\trender() {\n\t\tconst containerStyle: CSSProperties = {\n\t\t\twidth: this.props.radius * 2,\n\t\t\theight: this.props.radius * 2,\n\t\t\tborderRadius: this.props.radius,\n\t\t\tborder: '5px solid #f00',\n\t\t\tbackgroundColor: '#f003',\n\t\t\tdisplay: 'flex',\n\t\t\talignItems: 'center',\n\t\t\tjustifyContent: 'center',\n\t\t\t...this.props.style,\n\t\t};\n\t\tconst titleStyle: CSSProperties = {\n\t\t\tcolor: 'white',\n\t\t\ttransform: `scale(${this.props.contentScale}, ${this.props.contentScale})`,\n\t\t};\n\t\treturn (\n\t\t\t<div style={containerStyle}>\n\t\t\t\t<div style={titleStyle}>{this.props.title}</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","export default __webpack_public_path__ + \"static/media/directionArrow.23c75c33.svg\";","import React, { CSSProperties } from 'react';\nimport {\n\tEARTH_RADIUS,\n\tROCKET_HALF_HEIGHT,\n\tROCKET_HALF_WIDTH,\n\tROCKET_HEIGHT,\n\tROCKET_WIDTH,\n} from '../../models/bodies/constants';\nimport RocketModel from '../../models/bodies/Rocket';\nimport RocketElement from './Rocket';\nimport Stars from './Stars';\nimport Vector2D from '../../models/Vector2D';\nimport FlightInfoDisplay from './FlightInfoDisplay';\nimport Position, { relativePosition, getDistanceBetween, angleOfPosition } from '../../utils/Position';\nimport SectionElement from './Section';\nimport SectionModel from '../../models/Section';\nimport { edgeCoordsWithAngle } from '../../utils';\nimport directionArrow from '../../assets/directionArrow.svg';\n\ninterface Props {\n\trocket: RocketModel;\n\tsections: readonly SectionModel[];\n\tshowSection: (section: SectionModel) => void;\n\tstyle?: CSSProperties;\n}\ninterface State {\n\trocketCenterHeight: number;\n\trocketImageAngle: number; // angle by which we rotate the rocket in degrees. positive = clockwise.\n\tcurrentSection: SectionModel | null;\n\tviewWidth: number;\n\tviewHeight: number;\n\tscale: number;\n}\n\nconst DEFAULT_STATE: State = {\n\trocketCenterHeight: 0,\n\trocketImageAngle: 0,\n\tcurrentSection: null,\n\tviewWidth: 0,\n\tviewHeight: 0,\n\tscale: 1,\n};\n\nconst MAX_HEIGHT_COLOR = 20000;\nconst MAX_SCALE = 2;\nconst MIN_SCALE = 10 ** (-4);\nconst MIN_SCALE_WITHOUT_LIGHT_EFFECT = 0.01;\n\nfunction getLightStrength(height: number, scale: number = 1): number {\n\tlet strength: number;\n\tif (height < 0) strength = 1;\n\tif (height > MAX_HEIGHT_COLOR) strength = 0;\n\tstrength = 1 - height / MAX_HEIGHT_COLOR;\n\n\tif (scale > MIN_SCALE_WITHOUT_LIGHT_EFFECT) return strength;\n\treturn strength * (scale / MIN_SCALE_WITHOUT_LIGHT_EFFECT);\n}\n\nfunction heightOfPoint(point: Vector2D): number {\n\treturn point.magnitude - EARTH_RADIUS;\n}\n\nfunction getRocketHeight(rocket: RocketModel): number {\n\tlet minHeight: number = Infinity;\n\trocket.testPoints.forEach(point => {\n\t\tconst pointGlobalCoords = Vector2D.sum(rocket.state.position, point);\n\t\tconst height = heightOfPoint(pointGlobalCoords);\n\t\tif (minHeight === undefined || height < minHeight) {\n\t\t\tminHeight = height;\n\t\t}\n\t});\n\treturn minHeight;\n}\n\nfunction objectIsInsideView(relativePositionFromCenter: Position, viewHeight: number, viewWidth: number) {\n\treturn Math.abs(relativePositionFromCenter.x) < viewWidth / 2\n\t&& Math.abs(relativePositionFromCenter.y) < viewHeight / 2;\n}\n\nexport default class PilotView extends React.Component<Props, State> {\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.state = DEFAULT_STATE;\n\t}\n\n\tstatic getDerivedStateFromProps(props: Props): Partial<State> {\n\t\tconst rocketCenterHeight = props.rocket.state.position.magnitude - EARTH_RADIUS;\n\t\tconst rocketImageAngle =\n\t\t\t(- props.rocket.state.angularPosition + props.rocket.state.position.angle)\n\t\t\t* 180 / Math.PI;\n\t\treturn {\n\t\t\trocketCenterHeight: rocketCenterHeight,\n\t\t\trocketImageAngle: rocketImageAngle,\n\t\t};\n\t}\n\n\tcomponentDidUpdate() {\n\t\tlet newCurrentSection: SectionModel | null = null;\n\t\tthis.props.sections.forEach(section => {\n\t\t\tconst distance = getDistanceBetween(section.position, this.props.rocket.state.position);\n\t\t\tif (distance < section.radius) newCurrentSection = section;\n\t\t});\n\n\t\tif (this.state.currentSection !== newCurrentSection) {\n\t\t\tif (newCurrentSection !== null) this.props.showSection(newCurrentSection);\n\t\t\tthis.setState({ currentSection: newCurrentSection });\n\t\t}\n\t}\n\n\trender() {\n\t\tconst lightStrength = getLightStrength(this.state.rocketCenterHeight, this.state.scale);\n\t\tconst containerStyle: CSSProperties = {\n\t\t\tbackgroundColor: `rgba(\n\t\t\t\t${lightStrength * 130},\n\t\t\t\t${lightStrength * 200},\n\t\t\t\t${lightStrength * 255},\n\t\t\t\t1.0)\n\t\t\t`,\n\t\t\twidth: '100%',\n\t\t\theight: '100%',\n\t\t};\n\t\tconst landStyle: CSSProperties = {\n\t\t\tposition: 'absolute',\n\t\t\tbackgroundColor: '#940',\n\t\t\twidth: EARTH_RADIUS * 2,\n\t\t\theight: EARTH_RADIUS * 2,\n\t\t\tborderRadius: EARTH_RADIUS,\n\t\t\ttop: `calc(50% + ${this.state.rocketCenterHeight}px)`,\n\t\t\tleft: `calc(50% - ${EARTH_RADIUS}px)`,\n\t\t\tborder: '1000px solid #940',\n\t\t\ttransformOrigin: `${EARTH_RADIUS}px ${-this.state.rocketCenterHeight}px`,\n\t\t\ttransform: `scale(${this.state.scale}, ${this.state.scale})`,\n\t\t};\n\t\tconst rocketStyle: CSSProperties = {\n\t\t\tposition: 'absolute',\n\t\t\theight: ROCKET_HEIGHT,\n\t\t\twidth: ROCKET_WIDTH,\n\t\t\ttop: `calc(50% - ${ROCKET_HALF_HEIGHT}px)`,\n\t\t\tleft: `calc(50% - ${ROCKET_HALF_WIDTH}px)`,\n\t\t\ttransformOrigin: 'center',\n\t\t\ttransform: `\n\t\t\t\trotateZ(${this.state.rocketImageAngle}deg)\n\t\t\t\tscale(${this.state.scale}, ${this.state.scale})\n\t\t\t`,\n\t\t};\n\t\tconst sections = this.props.sections.map(sec => {\n\t\t\tconst relativePositionToSection = relativePosition(this.props.rocket.state.position, sec.position);\n\t\t\treturn (\n\t\t\t\t<SectionElement\n\t\t\t\t\tkey={sec.title}\n\t\t\t\t\ttitle={sec.title}\n\t\t\t\t\tradius={sec.radius}\n\t\t\t\t\tcontentScale={1 / this.state.scale}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\ttop: `calc(50% - ${sec.radius}px - ${relativePositionToSection.y}px)`,\n\t\t\t\t\t\tleft: `calc(50% - ${sec.radius}px + ${relativePositionToSection.x}px)`,\n\t\t\t\t\t\ttransformOrigin: `\n\t\t\t\t\t\t\t${sec.radius - relativePositionToSection.x}px \n\t\t\t\t\t\t\t${sec.radius + relativePositionToSection.y}px\n\t\t\t\t\t\t`,\n\t\t\t\t\t\ttransform: `scale(${this.state.scale}, ${this.state.scale})`,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t);\n\t\t});\n\n\t\tconst sectionIndicators: (JSX.Element | null)[] = this.props.sections.map(sec => {\n\t\t\tconst distance = getDistanceBetween(this.props.rocket.state.position, sec.position);\n\t\t\tconst relativePositionToSection = relativePosition(this.props.rocket.state.position, sec.position);\n\t\t\tif (objectIsInsideView(relativePositionToSection, this.state.viewHeight, this.state.viewWidth)) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tconst angle = angleOfPosition(relativePositionToSection);\n\t\t\t\tconst { x, y } = edgeCoordsWithAngle(angle, this.state.viewWidth, this.state.viewHeight, 100);\n\t\t\t\tconst size = Math.max(20, (50000) / distance);\n\t\t\t\tconst element = <img\n\t\t\t\t\tsrc={directionArrow}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\ttop: y - size / 2,\n\t\t\t\t\t\tleft: x - size / 2,\n\t\t\t\t\t\theight: size,\n\t\t\t\t\t\twidth: size,\n\t\t\t\t\t\ttransform: `rotateZ(${-angle * 180 / Math.PI}deg)`,\n\t\t\t\t\t}}\n\t\t\t\t\tkey={sec.title}\n\t\t\t\t/>;\n\t\t\t\treturn element;\n\t\t\t}\n\t\t});\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={'pilot-view'}\n\t\t\t\tstyle={containerStyle}\n\t\t\t\tref={el => {\n\t\t\t\t\tif (el) {\n\t\t\t\t\t\tif (el.clientHeight !== this.state.viewHeight || el.clientWidth !== this.state.viewWidth) {\n\t\t\t\t\t\t\tthis.setState({ viewHeight: el.clientHeight, viewWidth: el.clientWidth });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tonWheel={(e) => {\n\t\t\t\t\tthis.setState(prev => {\n\t\t\t\t\t\tconst newScale = prev.scale * (1 - e.deltaY / 1000);\n\t\t\t\t\t\treturn { scale: Math.min(MAX_SCALE, Math.max(newScale, MIN_SCALE)) };\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Stars density={0.5} minSize={1} maxSize={10} style={{ height: '100%', width: '100%' }}/>\n\t\t\t\t<div className={'land'} style={landStyle}/>\n\t\t\t\t<RocketElement rocket={this.props.rocket} style={rocketStyle} />\n\t\t\t\t<FlightInfoDisplay\n\t\t\t\t\tspeed={Math.round(this.props.rocket.state.velocity.magnitude)}\n\t\t\t\t\theight={Math.round(getRocketHeight(this.props.rocket))}\n\t\t\t\t\trocketPosition={this.props.rocket.state.position}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\ttop: 10,\n\t\t\t\t\t\tright: 10,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t{sections}\n\t\t\t\t{sectionIndicators}\n\t\t\t</div>\n\t\t);\n\t}\n}\n","enum KeyState {\n\tup,\n\tdown,\n}\n\nexport default class KeyboardStates {\n\tkeyStates: { [key: string]: KeyState } = {};\n\n\taddKey(\n\t\tkey: string, downCallback?: (event: KeyboardEvent) => void,\n\t\tupCallback?: (event: KeyboardEvent) => void,\n\t\tholdCallback?: (event: KeyboardEvent) => void,\n\t) {\n\t\tif (key in Object.keys(this.keyStates)) return;\n\t\tthis.keyStates[key] = KeyState.up;\n\n\t\tdocument.addEventListener('keydown', (event: KeyboardEvent) => {\n\t\t\tif (event.key === key) {\n\t\t\t\tif (this.keyStates[key] !== KeyState.down) {\n\t\t\t\t\tthis.keyStates[key] = KeyState.down;\n\t\t\t\t\tif (downCallback) downCallback(event);\n\t\t\t\t} else {\n\t\t\t\t\tif (holdCallback) holdCallback(event);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tdocument.addEventListener('keyup', (event: KeyboardEvent) => {\n\t\t\tif (event.key === key) {\n\t\t\t\tif (this.keyStates[key] !== KeyState.up) {\n\t\t\t\t\tthis.keyStates[key] = KeyState.up;\n\t\t\t\t\tif (upCallback) upCallback(event);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n","import Body from './Body';\nimport Vector2D from './Vector2D';\n\nconst GRAVITATIONAL_CONSTANT = 6.67408 * 10 ** (-11);\n\nexport default class Simulator {\n\tbodies: Body[] = [];\n\n\tsetBodies(...bodies: Body[]) {\n\t\tthis.bodies = bodies;\n\t}\n\n\tcalculateForces() {\n\t\tconst forces: Vector2D[] = this.bodies.map((massiveBody, index) => {\n\t\t\tlet force: Vector2D = new Vector2D(0, 0);\n\n\t\t\tfor (let i = 0; i < this.bodies.length; i++) {\n\t\t\t\tif (index === i) continue;\n\t\t\t\tconst otherBody = this.bodies[i];\n\t\t\t\tconst vectorToOtherBody = massiveBody.state.position.vectorTo(otherBody.state.position);\n\t\t\t\tconst forceMagnitude =\n\t\t\t\tGRAVITATIONAL_CONSTANT * massiveBody.state.mass * otherBody.state.mass\n\t\t\t\t/ vectorToOtherBody.magnitude ** 2;\n\n\t\t\t\tconst additionalForce = vectorToOtherBody.withMagnitude(forceMagnitude);\n\t\t\t\tforce = Vector2D.sum(force, additionalForce);\n\t\t\t}\n\t\t\treturn force;\n\t\t});\n\t\treturn forces;\n\t}\n\n\trollForward(dt: number) {\n\t\tconst forces = this.calculateForces();\n\t\tfor (let index = 0; index < this.bodies.length; index++) {\n\t\t\tconst massiveBody = this.bodies[index];\n\t\t\tconst newState = massiveBody.getNewState(\n\t\t\t\tdt,\n\t\t\t\tVector2D.sum(forces[index], massiveBody.additionalForce),\n\t\t\t\tmassiveBody.additionalTorque,\n\t\t\t);\n\n\t\t\tlet willCollide = false;\n\t\t\tfor (let i = 0; i < this.bodies.length; i++) {\n\t\t\t\tif (index === i ) continue;\n\n\t\t\t\tconst otherBody = this.bodies[i];\n\t\t\t\tif (otherBody.boundaryFunction === undefined) continue;\n\n\t\t\t\tfor (let j = 0; j < massiveBody.testPoints.length; j++) {\n\t\t\t\t\tconst testPoint = Vector2D.sum(newState.position, massiveBody.testPoints[j]);\n\t\t\t\t\tconst positionFromOtherBody = otherBody.state.position.vectorTo(testPoint);\n\t\t\t\t\tif (otherBody.boundaryFunction(positionFromOtherBody)) {\n\t\t\t\t\t\twillCollide = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (willCollide) {\n\t\t\t\tif (massiveBody.collisionHandler) massiveBody.collisionHandler();\n\t\t\t} else {\n\t\t\t\tmassiveBody.state = newState;\n\t\t\t}\n\t\t}\n\t}\n}\n","import Vector2D from './Vector2D';\n\ninterface BodyState {\n\tmass: number;\n\tangularMomentOfInertia: number;\n\tposition: Vector2D;\n\tvelocity: Vector2D;\n\tangularPosition: number;\n\tangularVelocity: number;\n}\n\nexport default abstract class Body {\n\tstate: BodyState = {\n\t\tmass: 1000,\n\t\tangularMomentOfInertia: 1000,\n\t\tposition: Vector2D.zero(),\n\t\tvelocity: Vector2D.zero(),\n\t\tangularPosition: 0, // right = 0, top = pi/2, left = pi, bottom = -pi/2 or 3pi/2\n\t\tangularVelocity: 0, // positive anti-clockwise\n\t};\n\n\tcanMove: boolean = true;\n\n\tabstract get testPoints(): Vector2D[];\n\n\tabstract get additionalForce(): Vector2D;\n\n\tabstract get additionalTorque(): number;\n\n\tcollisionHandler?: () => void;\n\n\tboundaryFunction?: (offsetFromBodyPosition: Vector2D) => boolean; // true if inside, false if outside\n\n\tgetNewState(dt: number, force: Vector2D, torque: number): BodyState {\n\t\tconst acceleration = force.scaled(1 / this.state.mass);\n\t\tconst angularAcceleration = torque / this.state.angularMomentOfInertia;\n\n\t\tconst positionDelta = Vector2D.sum(this.state.velocity.scaled(dt), acceleration.scaled(0.5 * dt ** 2));\n\t\tconst velocityDelta = acceleration.scaled(dt);\n\t\tconst angularPositionDelta = this.state.angularVelocity * dt + 0.5 * angularAcceleration * dt ** 2;\n\t\tconst angularVelocityDelta = angularAcceleration * dt;\n\n\t\treturn {\n\t\t\tmass: this.state.mass,\n\t\t\tangularMomentOfInertia: this.state.angularMomentOfInertia,\n\t\t\tposition: Vector2D.sum(this.state.position, positionDelta),\n\t\t\tvelocity: Vector2D.sum(this.state.velocity, velocityDelta),\n\t\t\tangularPosition: this.state.angularPosition + angularPositionDelta,\n\t\t\tangularVelocity: this.state.angularVelocity + angularVelocityDelta,\n\t\t};\n\t}\n}\n","import Body from '../Body';\nimport Vector2D from '../Vector2D';\nimport { EARTH_MASS, EARTH_RADIUS } from './constants';\n\nexport default class Earth extends Body {\n\tget additionalForce() { return Vector2D.zero(); }\n\n\tget additionalTorque() { return 0; }\n\n\tget testPoints(): Vector2D[] { return []; }\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state.mass = EARTH_MASS;\n\n\t\tthis.boundaryFunction = (offset: Vector2D) => offset.magnitude < EARTH_RADIUS;\n\t\tthis.canMove = false;\n\t}\n}\n","import Body from '../Body';\nimport Vector2D from '../Vector2D';\nimport { EARTH_RADIUS, ROCKET_MAX_THRUST } from '../bodies/constants';\nimport { ROCKET_MASS, ROCKET_HALF_HEIGHT, ROCKET_HALF_WIDTH } from '../bodies/constants';\n\nexport default class Rocket extends Body {\n\n\tget additionalForce() { return this.thrust; }\n\n\tget thrust(): Vector2D { return this.rocketDirection.scaled(this.thrustStrength * ROCKET_MAX_THRUST); }\n\n\t_thrustStrength: number = 0;\n\n\tget thrustStrength(): number { return this._thrustStrength; }\n\n\tset thrustStrength(value: number) {\n\t\tif (value < 0) throw new Error('thrustStrength cannot be less than 0');\n\t\tif (value > 1) throw new Error('thrustStrength cannot be greater than 1');\n\t\tthis._thrustStrength = value;\n\t}\n\n\tget additionalTorque() {\n\t\treturn this.thrust.magnitude * 20 * (-Math.sin(this.thrustDirection));\n\t}\n\n\t_thrustDirection: number = 0;\n\n\tget thrustDirection(): number { return this._thrustDirection; }\n\n\tset thrustDirection(value: number) {\n\t\tif (value < -Math.PI / 2) throw new Error('torqueStrength cannot be less than -pi/2');\n\t\tif (value > Math.PI / 2) throw new Error('torqueStrength cannot be greater than pi/2');\n\t\tthis._thrustDirection = value;\n\t}\n\n\tget rocketDirection(): Vector2D {\n\t\tconst x = Math.cos(this.state.angularPosition);\n\t\tconst y = Math.sin(this.state.angularPosition);\n\t\treturn new Vector2D(x, y);\n\t}\n\n\tget rocketLeftDirection(): Vector2D {\n\t\tconst rocketDirection = this.rocketDirection;\n\t\tconst angle = Math.PI / 2;\n\t\treturn new Vector2D(\n\t\t\trocketDirection.x * Math.cos(angle) - rocketDirection.y * Math.sin(angle),\n\t\t\trocketDirection.x * Math.sin(angle) + rocketDirection.y * Math.cos(angle),\n\t\t);\n\t}\n\n\tget testPoints(): Vector2D[] {\n\t\tconst rocketDirection = this.rocketDirection;\n\t\tconst rocketLeftDirection = this.rocketLeftDirection;\n\t\treturn [\n\t\t\tVector2D.sum(rocketDirection.scaled(ROCKET_HALF_HEIGHT), rocketLeftDirection.scaled(ROCKET_HALF_WIDTH)),\n\t\t\tVector2D.sum(rocketDirection.scaled(ROCKET_HALF_HEIGHT), rocketLeftDirection.scaled(-ROCKET_HALF_WIDTH)),\n\t\t\tVector2D.sum(rocketDirection.scaled(-ROCKET_HALF_HEIGHT), rocketLeftDirection.scaled(ROCKET_HALF_WIDTH)),\n\t\t\tVector2D.sum(rocketDirection.scaled(-ROCKET_HALF_HEIGHT), rocketLeftDirection.scaled(-ROCKET_HALF_WIDTH)),\n\t\t];\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state.mass = ROCKET_MASS;\n\t\tthis.state.angularMomentOfInertia = 10 ** 6;\n\t\tthis.state.position = new Vector2D(0, EARTH_RADIUS + 300);\n\t\tthis.state.velocity = Vector2D.zero();\n\t\tthis.state.angularPosition = Math.PI / 2;\n\n\t\tthis.boundaryFunction = (offset: Vector2D) => {\n\t\t\treturn offset.x > -ROCKET_HALF_WIDTH && offset.x < ROCKET_HALF_WIDTH\n\t\t\t&& offset.y > -ROCKET_HALF_HEIGHT && offset.y < ROCKET_HALF_HEIGHT;\n\t\t};\n\t}\n}\n","const themeColors = {\n\tblue: {\n\t\txLight: '#A4CCFF',\n\t\tlight: '#45A5FF',\n\t\tmediumLight: '#1080FF',\n\t\tmedium: '#0900FF',\n\t\tmediumDark: '#0700BD',\n\t\tdark: '#05008F',\n\t\txDark: '#030056',\n\t},\n} as const;\n\nexport default themeColors;\n","import React, { CSSProperties } from 'react';\nimport themeColors from '../../constants/colors';\n\ninterface Props {\n\tonClick?: () => void;\n\tonTouchStart?: () => void;\n\tonTouchEnd?: () => void;\n\tstyle?: CSSProperties;\n}\ninterface State {\n\tisTouched: boolean;\n}\nconst BACKGROUND_COLOR_DEFAULT = themeColors.blue.light;\nconst BACKGROUND_COLOR_SELECTED = themeColors.blue.medium;\nconst DEFAULT_STATE: State = {\n\tisTouched: false,\n};\n\nexport default class GenericButton extends React.Component<Props, State> {\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.state = DEFAULT_STATE;\n\t}\n\n\trender() {\n\t\tconst containerStyle: CSSProperties = {\n\t\t\tborderRadius: 10,\n\t\t\tpadding: 10,\n\t\t\tbackgroundColor: this.state.isTouched ? BACKGROUND_COLOR_SELECTED : BACKGROUND_COLOR_DEFAULT,\n\t\t\tmargin: 'auto',\n\t\t\tcolor: 'white',\n\t\t\t...this.props.style,\n\t\t};\n\t\treturn (\n\t\t\t<div\n\t\t\t\tstyle={containerStyle}\n\t\t\t\tonClick={this.props.onClick}\n\t\t\t\tonTouchStart={() => {\n\t\t\t\t\tif (this.props.onTouchStart) this.props.onTouchStart();\n\t\t\t\t\tthis.setState({ isTouched: true });\n\t\t\t\t}}\n\t\t\t\tonTouchEnd={() => {\n\t\t\t\t\tif (this.props.onTouchEnd) this.props.onTouchEnd();\n\t\t\t\t\tthis.setState({ isTouched: false });\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{this.props.children}\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { CSSProperties } from 'react';\n\ninterface Props {\n\tisShown: boolean;\n\tdidTouchOutside?: () => void;\n\tdidHideModal?: () => void;\n\tstyle?: CSSProperties;\n}\n\nexport default class Modal extends React.Component<Props> {\n\trender() {\n\t\tconst containerStyle: CSSProperties = {\n\t\t\tdisplay: this.props.isShown ? 'flex' : 'none',\n\t\t\tposition: 'absolute',\n\t\t\ttop: 0,\n\t\t\tleft: 0,\n\t\t\twidth: '100%',\n\t\t\theight: '100%',\n\t\t\tbackgroundColor: '#f001',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t\t...this.props.style,\n\t\t};\n\t\tconst contentContainerStyle: CSSProperties = {\n\t\t\tborderRadius: 10,\n\t\t\tbackgroundColor: '#fffc',\n\t\t\tpadding: 10,\n\t\t};\n\t\treturn (\n\t\t\t<div style={containerStyle} onClick={this.props.didTouchOutside}>\n\t\t\t\t<div style={contentContainerStyle} onClick={(e) => e.stopPropagation()}>\n\t\t\t\t\t{this.props.children}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import { EARTH_RADIUS } from '../../models/bodies/constants';\nimport Section from '../../models/Section';\nimport helloSection from './helloSection';\n\nconst sections: readonly Section[] = [\n\t{\n\t\ttitle: 'Hello',\n\t\tcontent: helloSection,\n\t\tposition: { x: 0, y: EARTH_RADIUS + 5500 },\n\t\tradius: 5000,\n\t},\n] as const;\n\nexport default sections;\n","import React from 'react';\n\nconst helloSection = <div style={{ backgroundColor: 'red' }}>Hello</div>;\n\nexport default helloSection;\n","import React, { CSSProperties } from 'react';\nimport Vector2D from '../models/Vector2D';\nimport PilotView from './PilotView';\nimport Simulator from '../models/Simulator';\nimport Earth from '../models/bodies/Earth';\nimport Rocket from '../models/bodies/Rocket';\nimport { EARTH_RADIUS } from '../models/bodies/constants';\nimport KeyboardStates from '../utils/KeyboardStates';\nimport GenericButton from './generic/GenericButton';\nimport Modal from './generic/Modal';\nimport SectionModel from '../models/Section';\nimport sections from '../data/sections';\n\ninterface Props {\n\tstyle?: CSSProperties;\n}\ninterface State {\n\trocketPosition: Vector2D;\n\tsimulationIsRunning: boolean;\n\tmodalIsShown: boolean;\n\tmodalContent: JSX.Element;\n}\n\nconst DEFAULT_STATE: State = {\n\trocketPosition: new Vector2D(0, EARTH_RADIUS),\n\tsimulationIsRunning: false,\n\tmodalIsShown: false,\n\tmodalContent: <div/>,\n};\nconst SIMULATION_DT = 0.01;\n\nexport default class SimulatorScreen extends React.Component<Props, State> {\n\n\tsimulator: Simulator;\n\n\tsimulatorInterval?: NodeJS.Timer;\n\n\tearth: Earth = new Earth();\n\n\trocket: Rocket = new Rocket();\n\n\tcomponentDidMount() {\n\t\tthis.setState({ simulationIsRunning: true });\n\n\t\tthis.simulatorInterval = setInterval(() => {\n\t\t\tif (!this.state.simulationIsRunning) return;\n\t\t\tthis.simulator.rollForward(SIMULATION_DT);\n\t\t\tthis.setState({\n\t\t\t\trocketPosition: this.rocket.state.position,\n\t\t\t});\n\t\t}, SIMULATION_DT * 1000);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif (this.simulatorInterval) clearInterval(this.simulatorInterval);\n\t}\n\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.simulator = new Simulator();\n\t\tthis.simulator.setBodies(this.rocket, this.earth);\n\t\tthis.state = DEFAULT_STATE;\n\t\tthis.rocket.collisionHandler = () => {\n\t\t\tif (this.rocket.state.velocity.magnitude < 10) {\n\t\t\t\tthis.rocket.state.velocity = Vector2D.zero();\n\t\t\t} else {\n\t\t\t\tthis.rocket.canMove = false;\n\t\t\t}\n\t\t};\n\n\t\tthis.addKeyboardListeners();\n\t}\n\n\taddKeyboardListeners() {\n\t\tconst keyboardListener = new KeyboardStates();\n\t\tkeyboardListener.addKey(\n\t\t\t'ArrowUp',\n\t\t\t() => { this.setFullThrust(); },\n\t\t\t() => { this.setNoThrust(); },\n\t\t);\n\t\tkeyboardListener.addKey(\n\t\t\t'ArrowLeft',\n\t\t\t() => { this.setTorqueAnticlockwise(); },\n\t\t\t() => { this.setNoTorque(); },\n\t\t);\n\t\tkeyboardListener.addKey(\n\t\t\t'ArrowRight',\n\t\t\t() => { this.setTorqueClockwise(); },\n\t\t\t() => { this.setNoTorque(); },\n\t\t);\n\t}\n\n\tsetFullThrust() { this.rocket.thrustStrength = 1; }\n\n\tsetNoThrust() { this.rocket.thrustStrength = 0; }\n\n\tsetTorqueAnticlockwise() { this.rocket.thrustDirection = - Math.PI / 10; }\n\n\tsetTorqueClockwise() { this.rocket.thrustDirection = Math.PI / 10; }\n\n\tsetNoTorque() {this.rocket.thrustDirection = 0; }\n\n\tresetSimulation() {\n\t\tthis.rocket = new Rocket();\n\t\tthis.earth = new Earth();\n\t\tthis.simulator.setBodies(this.rocket, this.earth);\n\t}\n\n\tpauseOrResumeSimulation() {\n\t\tthis.setState((prev) => {return { simulationIsRunning: !prev.simulationIsRunning };});\n\t}\n\n\tshowModal(section: SectionModel) {\n\t\tthis.setState({\n\t\t\tmodalIsShown: true,\n\t\t\tmodalContent: section.content,\n\t\t});\n\t}\n\n\trender() {\n\t\tconst containerStyle: CSSProperties = {\n\t\t\twidth: '100%',\n\t\t\theight: '100%',\n\t\t};\n\t\tconst simulationCoreButtonsContainer: CSSProperties = {\n\t\t\ttop: '10px',\n\t\t\tleft: '10px',\n\t\t};\n\t\tconst arrowButtonsContainer: CSSProperties = {\n\t\t\tbottom: '10px',\n\t\t\tright: '10px',\n\t\t};\n\t\tconst buttonsContainer: CSSProperties = {\n\t\t\tposition: 'absolute',\n\t\t\tdisplay: 'flex',\n\t\t\tflexDirection: 'row',\n\t\t\tgap: '10px',\n\t\t};\n\t\treturn (\n\t\t\t<div className={'simulator-screen'} style={containerStyle}>\n\t\t\t\t<PilotView\n\t\t\t\t\trocket={this.rocket}\n\t\t\t\t\tsections={sections}\n\t\t\t\t\tshowSection={(section) => {\n\t\t\t\t\t\tthis.pauseOrResumeSimulation();\n\t\t\t\t\t\tthis.showModal(section);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<div style={{ ...buttonsContainer, ...simulationCoreButtonsContainer }}>\n\t\t\t\t\t<GenericButton style={{\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t}} onClick={() => { this.resetSimulation(); }}>\n\t\t\t\t\tReset\n\t\t\t\t\t</GenericButton>\n\t\t\t\t\t<GenericButton style={{\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tleft: 100,\n\t\t\t\t\t}} onClick={() => { this.pauseOrResumeSimulation(); }}>\n\t\t\t\t\t\t{this.state.simulationIsRunning ? 'Pause' : 'Resume'}\n\t\t\t\t\t</GenericButton>\n\t\t\t\t</div>\n\t\t\t\t<div style={{ ...buttonsContainer, ...arrowButtonsContainer }}>\n\t\t\t\t\t<GenericButton\n\t\t\t\t\t\tonTouchStart={this.setTorqueAnticlockwise.bind(this)}\n\t\t\t\t\t\tonTouchEnd={this.setNoTorque.bind(this)}\n\t\t\t\t\t>\n\t\t\t\t\t\tLeft\n\t\t\t\t\t</GenericButton>\n\t\t\t\t\t<GenericButton\n\t\t\t\t\t\tonTouchStart={this.setFullThrust.bind(this)}\n\t\t\t\t\t\tonTouchEnd={this.setNoThrust.bind(this)}\n\t\t\t\t\t>\n\t\t\t\t\t\tThrust\n\t\t\t\t\t</GenericButton>\n\t\t\t\t\t<GenericButton\n\t\t\t\t\t\tonTouchStart={this.setTorqueClockwise.bind(this)}\n\t\t\t\t\t\tonTouchEnd={this.setNoTorque.bind(this)}\n\t\t\t\t\t>\n\t\t\t\t\t\tRight\n\t\t\t\t\t</GenericButton>\n\t\t\t\t</div>\n\t\t\t\t<Modal isShown={this.state.modalIsShown} didTouchOutside={() => {\n\t\t\t\t\tthis.setState({ modalIsShown: false });\n\t\t\t\t\tthis.pauseOrResumeSimulation();\n\t\t\t\t}}>\n\t\t\t\t\t{this.state.modalContent}\n\t\t\t\t</Modal>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import './css/styles.css';\nimport React from 'react';\nimport SimulatorScreen from './components/SimulatorScreen';\n\nfunction App() {\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div id='content'>\n\t\t\t\t<SimulatorScreen/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({\n\t\t\tgetCLS, getFID, getFCP, getLCP, getTTFB,\n\t\t}) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}