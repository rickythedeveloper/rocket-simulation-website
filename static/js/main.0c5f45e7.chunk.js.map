{"version":3,"sources":["utils/Position.ts","models/Vector2D.ts","models/bodies/constants.ts","assets/rocket.svg","components/PilotView/Rocket/FlightInfoDisplay.tsx","components/PilotView/Rocket/VelocityIndicator.tsx","utils/index.ts","components/generic/Particles.tsx","components/PilotView/Rocket/ThrustParticle.tsx","components/PilotView/Rocket/index.tsx","components/PilotView/Stars.tsx","components/PilotView/index.tsx","utils/KeyboardStates.ts","models/Simulator.ts","models/Body.ts","models/bodies/Earth.ts","models/bodies/Rocket.ts","constants/colors.ts","components/generic/GenericButton.tsx","components/SimulatorScreen.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getDistanceBetween","a","b","Math","sqrt","x","y","Vector2D","this","magnitude","position","PI","angleRadians","atan","angleOfPosition","vector","scale","normalised","scaled","total","vectors","EARTH_RADIUS","EARTH_MASS","DEFAULT_STATE","FlightInfoDisplay","props","state","containerStyle","backgroundColor","borderRadius","padding","style","speed","height","round","rocketPosition","React","Component","VelocityIndicator","width","arrowOuterRadius","transform","angularPosition","arrowLength","arrowInnerRadius","arrowStyle","left","viewBox","version","xmlns","id","stroke","strokeWidth","fill","fillRule","strokeLinecap","strokeLinejoin","d","randomNumberBetween","random","arrayWithRemovedIndices","array","indices","sort","lhs","rhs","newArray","forEach","index","slice","concat","length","arrayWithRemovedIndex","Particles","particleInterval","particleStates","particles","missingIndices","setInterval","rollForward","bind","clearInterval","updateMissingIndices","cleanParticleStates","addParticlesStates","updateParticleStates","updateParticles","currentProb","config","existenceFunction","time","deathProb","push","setState","prev","missingCount","numberOfParticles","estimate","particleDurationEstimate","additionalParticleStates","i","min","initialPosition","map","particleState","updatePosition","Error","generateParticle","particle","generateParticleComponent","top","ThrustParticle","size","lifecycle","gb","getColor","THRUST_PARTICLE_DURATION","thrustParticleUpdatePosition","pos","dt","thrustParticlesCommonStyle","thrustDirection","bottom","thrustParticleExistenceFunction","getThrustParticle","thrustParticleInitialPosition","thrustParticlesConfig","thrustStrength","Rocket","rocket","rocketStyle","alignItems","justifyContent","display","objectFit","className","src","rocketImage","maxWidth","maxHeight","velocity","angle","right","Stars","stars","ref","el","clientWidth","clientHeight","numStars","density","minSize","maxSize","rocketImageAngle","KeyState","PilotView","lightStrength","landStyle","ROCKET_HEIGHT","borderTop","GRAVITATIONAL_CONSTANT","Simulator","bodies","massiveBody","force","otherBody","vectorToOtherBody","vectorTo","forceMagnitude","mass","additionalForce","withMagnitude","sum","forces","calculateForces","newState","getNewState","additionalTorque","willCollide","undefined","boundaryFunction","j","testPoints","testPoint","positionFromOtherBody","collisionHandler","Body","angularMomentOfInertia","zero","angularVelocity","canMove","torque","acceleration","angularAcceleration","positionDelta","velocityDelta","angularPositionDelta","angularVelocityDelta","Earth","offset","_thrustStrength","_thrustDirection","ROCKET_SIZE","thrust","rocketDirection","ROCKET_MASS","value","sin","cos","KeyboardStates","keyStates","key","downCallback","upCallback","holdCallback","Object","keys","up","document","addEventListener","event","down","themeColors","blue","xLight","light","mediumLight","medium","mediumDark","dark","xDark","BACKGROUND_COLOR_DEFAULT","BACKGROUND_COLOR_SELECTED","isTouched","GenericButton","margin","color","onClick","onTouchStart","onTouchEnd","children","simulationIsRunning","SimulatorScreen","simulator","simulatorInterval","earth","setBodies","addKeyboardListeners","SIMULATION_DT","keyboardListener","addKey","setFullThrust","setNoThrust","setTorqueAnticlockwise","setNoTorque","setTorqueClockwise","buttonsContainer","flexDirection","gap","resetSimulation","pauseSimulation","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0c5f45e7.chunk.js","sourcesContent":["export default interface Position {\n\tx: number;\n\ty: number;\n}\n\nexport function getDistanceBetween(a: Position, b: Position): number {\n\treturn Math.sqrt((a.x - b.x) ** 2 + (a.y - b.y) ** 2);\n}\n\nexport function angleOfPosition(position: Position): number {\n\tif (position.x === 0) {\n\t\treturn position.y > 0 ? Math.PI / 2 : -Math.PI / 2;\n\t}\n\tconst angleRadians = Math.atan(position.y / position.x);\n\tif (position.x > 0) return angleRadians;\n\treturn angleRadians + (position.y > 0 ? 1 : -1) * Math.PI;\n}\n","import Position, { angleOfPosition, getDistanceBetween } from '../utils/Position';\n\nexport default class Vector2D implements Position {\n\tget magnitude() {return getDistanceBetween({ x:0, y:0 }, this);}\n\n\tget normalised() {\n\t\tconst magnitude = this.magnitude;\n\t\treturn new Vector2D(this.x / magnitude, this.y / magnitude);\n\t}\n\n\tget angle(): number { return angleOfPosition(this); }\n\n\tconstructor(public x: number, public y: number) {}\n\n\tstatic sum(...vectors: Vector2D[]): Vector2D {\n\t\tconst total = { x: 0, y: 0 };\n\t\tfor (const vector of vectors) {\n\t\t\ttotal.x += vector.x;\n\t\t\ttotal.y += vector.y;\n\t\t}\n\t\treturn new Vector2D(total.x, total.y);\n\t}\n\n\tstatic zero(): Vector2D { return new Vector2D(0, 0); }\n\n\tstatic distanceBetween(a: Vector2D, b: Vector2D): number { return getDistanceBetween(a, b); }\n\n\tvectorTo(vector: Vector2D): Vector2D { return new Vector2D(vector.x - this.x, vector.y - this.y); }\n\n\tscaled(scale: number): Vector2D { return new Vector2D(this.x * scale, this.y * scale); }\n\n\twithMagnitude(magnitude: number): Vector2D { return this.normalised.scaled(magnitude); }\n}\n","export const EARTH_RADIUS = 6371000;\nexport const EARTH_MASS = 6 * 10 ** 24;\nexport const ROCKET_MASS = 1000;\nexport const ROCKET_SIZE = 10;\nexport const ROCKET_MAX_THRUST = ROCKET_MASS * 20;\n","export default __webpack_public_path__ + \"static/media/rocket.e9629d5d.svg\";","import React, { CSSProperties } from 'react';\nimport Vector2D from '../../../models/Vector2D';\n\ninterface Props {\n\tspeed: number;\n\theight: number;\n\trocketPosition: Vector2D;\n\tstyle?: CSSProperties;\n}\ninterface State {}\nconst DEFAULT_STATE = {};\n\nexport default class FlightInfoDisplay extends React.Component<Props, State> {\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.state = DEFAULT_STATE;\n\t}\n\n\trender() {\n\t\tconst containerStyle: CSSProperties = {\n\t\t\tbackgroundColor: '#7774',\n\t\t\tborderRadius: 10,\n\t\t\tpadding: 10,\n\t\t\t...this.props.style,\n\t\t};\n\t\treturn (\n\t\t\t<div style={containerStyle}>\n\t\t\t\t<div>{`Speed: ${this.props.speed}`}</div>\n\t\t\t\t<div>{`Height: ${this.props.height}`}</div>\n\t\t\t\t<div>{`x: ${Math.round(this.props.rocketPosition.x)}`}</div>\n\t\t\t\t<div>{`y: ${Math.round(this.props.rocketPosition.y)}`}</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { CSSProperties } from 'react';\n\ninterface Props {\n\tarrowInnerRadius: number;\n\tarrowOuterRadius: number;\n\tangularPosition: number;\n\tstyle?: CSSProperties;\n}\n\nconst ARROW_MAX_WIDTH = 20;\nexport default class VelocityIndicator extends React.Component<Props> {\n\trender() {\n\t\tconst containerStyle: CSSProperties = {\n\t\t\twidth: `${this.props.arrowOuterRadius * 2}px`,\n\t\t\theight: `${ARROW_MAX_WIDTH}px`,\n\t\t\ttransform: `rotateZ(${-this.props.angularPosition * 180 / Math.PI}deg)`,\n\t\t\t...this.props.style,\n\t\t};\n\t\tconst arrowLength = this.props.arrowOuterRadius - this.props.arrowInnerRadius;\n\t\tconst arrowStyle: CSSProperties = {\n\t\t\twidth: `${arrowLength}px`,\n\t\t\theight: `${ARROW_MAX_WIDTH}px`,\n\t\t\tleft: `${this.props.arrowOuterRadius + this.props.arrowInnerRadius}px`,\n\t\t\tposition: 'absolute',\n\t\t};\n\t\tconst arrowColor = '#fff'; // TODO #33 dynamically change color\n\n\t\treturn (\n\t\t\t<div style={containerStyle}>\n\t\t\t\t{/* eslint-disable max-len */}\n\t\t\t\t<svg style={arrowStyle} viewBox=\"0 0 756 273\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t<title>arrow</title>\n\t\t\t\t\t<g id=\"arrow\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n\t\t\t\t\t\t<path d=\"M36.5,135.5 L719.5,135.5 M718.847561,135.5 L532.152439,243.5 M718.847561,135.5 L532.152439,28.5\" id=\"Combined-Shape\" stroke={arrowColor} strokeWidth=\"50\"></path>\n\t\t\t\t\t</g>\n\t\t\t\t</svg>\n\t\t\t\t{/* eslint-enable max-len */}\n\t\t\t</div>\n\t\t);\n\t}\n}\n","export function randomNumberBetween(a: number, b: number): number {\n\treturn a + (b - a) * Math.random();\n}\n\nexport function arrayWithRemovedIndex<T>(array: Array<T>, index: number): Array<T> {\n\treturn array.slice(0, index).concat(array.slice(index + 1, array.length));\n}\n\nexport function arrayWithRemovedIndices<T>(array: Array<T>, indices: number[]): Array<T> {\n\tindices.sort((lhs, rhs) => rhs - lhs);\n\tlet newArray: Array<T> = array;\n\tindices.forEach(index => {\n\t\tnewArray = arrayWithRemovedIndex(newArray, index);\n\t});\n\treturn newArray;\n}\n","import React, { CSSProperties } from 'react';\nimport Position from '../../utils/Position';\nimport { arrayWithRemovedIndices } from '../../utils/index';\n\nexport interface ParticlesConfig {\n\tnumberOfParticles: number;\n\tparticleDurationEstimate: number;\n\texistenceFunction: (time: number) => number;\n\tgenerateParticleComponent: (time: number) => React.ReactElement;\n\tupdatePosition: (position: Position, dt: number) => Position;\n\tinitialPosition: () => Position;\n}\n\ninterface Props {\n\tconfig: ParticlesConfig;\n\tstyle?: CSSProperties;\n}\n\ninterface ParticleState {\n\tid: number;\n\tposition: Position;\n\ttime: number; // time passed for each particle\n}\ninterface State {\n\tparticleStates: ParticleState[];\n\tparticles: JSX.Element[];\n\tmissingIndices: number[];\n}\n\nconst PARTICLE_UPDATE_INTERVAL = 30; // in millis\n\nexport default class Particles extends React.Component<Props, State> {\n\tparticleInterval?: NodeJS.Timer;\n\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tparticleStates: [],\n\t\t\tparticles: [],\n\t\t\tmissingIndices: [],\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.particleInterval = setInterval(this.rollForward.bind(this), PARTICLE_UPDATE_INTERVAL);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif (this.particleInterval) clearInterval(this.particleInterval);\n\t}\n\n\trollForward() {\n\t\tthis.updateMissingIndices();\n\t\tthis.cleanParticleStates();\n\t\tthis.addParticlesStates();\n\t\tthis.updateParticleStates();\n\t\tthis.updateParticles();\n\t}\n\n\t/**\n\t * Update missing indices based on the existence function\n\t */\n\tupdateMissingIndices() {\n\t\tconst missingIndices: number[] = [];\n\t\tthis.state.particleStates.forEach((state, index) => {\n\t\t\tconst currentProb = this.props.config.existenceFunction(state.time);\n\t\t\tconst nextProb = this.props.config.existenceFunction(state.time + PARTICLE_UPDATE_INTERVAL);\n\t\t\tconst deathProb = 1 - nextProb / currentProb;\n\t\t\tif (Math.random() < deathProb) {\n\t\t\t\tmissingIndices.push(index);\n\t\t\t}\n\t\t});\n\t\tthis.setState({\n\t\t\tmissingIndices: missingIndices,\n\t\t});\n\t}\n\n\t/**\n\t * Clear the particle states for the particles that weren't used in the last render,\n\t */\n\tcleanParticleStates() {\n\t\tthis.setState((prev) => {\n\t\t\treturn {\n\t\t\t\tparticleStates: arrayWithRemovedIndices(prev.particleStates, prev.missingIndices),\n\t\t\t\tmissingIndices: [],\n\t\t\t};\n\t\t});\n\t}\n\n\t/**\n\t * Add some (or all) of 'missing' particle states.\n\t */\n\taddParticlesStates() {\n\t\tconst target = this.props.config.numberOfParticles;\n\t\tconst current = this.state.particles.length;\n\t\tconst missingCount = target - current;\n\t\tconst estimate =\n\t\t\tthis.props.config.numberOfParticles\n\t\t\t* (PARTICLE_UPDATE_INTERVAL / this.props.config.particleDurationEstimate);\n\n\t\tconst additionalParticleStates: ParticleState[] = [];\n\t\tfor (let i = 0; i < Math.min(missingCount, estimate); i++) {\n\t\t\tadditionalParticleStates.push({\n\t\t\t\tid: Math.random(),\n\t\t\t\tposition: this.props.config.initialPosition(),\n\t\t\t\ttime: 0,\n\t\t\t});\n\t\t}\n\t\tthis.setState((prev) => {\n\t\t\treturn {\n\t\t\t\tparticleStates: prev.particleStates.concat(additionalParticleStates),\n\t\t\t};\n\t\t});\n\t}\n\n\t/**\n\t * Update the particle states while keeping the id unchanged\n\t */\n\tupdateParticleStates() {\n\t\tthis.setState(\n\t\t\t(prev) => {\n\t\t\t\treturn {\n\t\t\t\t\tparticleStates: prev.particleStates.map(particleState => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tid: particleState.id,\n\t\t\t\t\t\t\tposition: this.props.config.updatePosition(\n\t\t\t\t\t\t\t\tparticleState.position,\n\t\t\t\t\t\t\t\tPARTICLE_UPDATE_INTERVAL,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\ttime: particleState.time + PARTICLE_UPDATE_INTERVAL,\n\t\t\t\t\t\t};\n\t\t\t\t\t}),\n\t\t\t\t};\n\t\t\t},\n\t\t);\n\t}\n\n\tfindIndexOfParticleState(id: number) {\n\t\tfor (let i = 0; i < this.state.particleStates.length; i++) {\n\t\t\tif (this.state.particleStates[i].id === id) return i;\n\t\t}\n\t\tthrow new Error(`Could not find particle state with id ${id}`);\n\t}\n\n\t/**\n\t * Given a list of particle states, regenerate the particles\n\t * and save particles and missing indices.\n\t */\n\tupdateParticles(): void {\n\t\tconst particles: JSX.Element[] = this.state.particleStates.map(\n\t\t\t(particleState) => this.generateParticle(particleState),\n\t\t);\n\n\t\tthis.setState({\n\t\t\tparticles: particles,\n\t\t});\n\t}\n\n\t/**\n\t * Given a particle state, generate particle component, add style and return it.\n\t * @param position\n\t * @param time\n\t * @returns\n\t */\n\tgenerateParticle(particleState: ParticleState): JSX.Element {\n\t\tconst particle = this.props.config.generateParticleComponent(particleState.time);\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\tleft: particleState.position.x,\n\t\t\t\t\ttop: particleState.position.y,\n\t\t\t\t\ttransform: 'translate(-50%, -50%)',\n\t\t\t\t}}\n\t\t\t\tkey={particleState.id}\n\t\t\t>\n\t\t\t\t{particle}\n\t\t\t</div>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst containerStyle: CSSProperties = {\n\t\t\t...this.props.style,\n\t\t};\n\n\t\treturn (\n\t\t\t<div style={containerStyle}>\n\t\t\t\t{this.state.particles}\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { CSSProperties } from 'react';\n\ninterface Props {\n\tlifecycle: number; // between 0 and 1\n\tstyle?: CSSProperties;\n}\n\nconst MAX_SIZE = 13;\n\nfunction getSize(lifecycle: number): number {\n\treturn MAX_SIZE * (1 - lifecycle);\n}\n\nfunction getColor(lifecycle: number): string {\n\tconst initialGB = 0;\n\tconst gb = initialGB + (255 - initialGB) * lifecycle;\n\treturn `rgba(255, ${gb}, ${gb})`;\n}\n\nexport default class ThrustParticle extends React.Component<Props> {\n\n\trender() {\n\t\tconst size = getSize(this.props.lifecycle);\n\t\tconst backgroundColor = getColor(this.props.lifecycle);\n\t\tconst containerStyle: CSSProperties = {\n\t\t\twidth: size,\n\t\t\theight: size,\n\t\t\tborderRadius: size / 2,\n\t\t\tbackgroundColor,\n\t\t\t...this.props.style,\n\t\t};\n\t\treturn (\n\t\t\t<div style={containerStyle}/>\n\t\t);\n\t}\n}\n","import React, { CSSProperties } from 'react';\nimport rocketImage from '../../../assets/rocket.svg';\nimport FlightInfoDisplay from './FlightInfoDisplay';\nimport VelocityIndicator from './VelocityIndicator';\nimport RocketModel from '../../../models/bodies/Rocket';\nimport Particles, { ParticlesConfig } from '../../generic/Particles';\nimport { EARTH_RADIUS } from '../../../models/bodies/constants';\nimport ThrustParticle from './ThrustParticle';\nimport Position from '../../../utils/Position';\n\ninterface Props {\n\trocket: RocketModel;\n\tstyle?: CSSProperties;\n}\ninterface State {}\n\nfunction getHeight(rocket: RocketModel): number { return rocket.state.position.magnitude - EARTH_RADIUS; }\n\nconst THRUST_PARTICLE_DURATION = 250;\nconst THRUST_PARTICLE_SPEED = 0.6; // 'Pixels' per millisecond\nconst THRUST_PARTICLE_COUNT = 60;\nconst THRUST_WIDTH = 10;\nconst THRUST_MARGIN = '15%';\n\nconst thrustParticleUpdatePosition = (pos: Position, dt: number) => {\n\treturn { x: pos.x, y: pos.y + dt * THRUST_PARTICLE_SPEED };\n};\nconst thrustParticlesCommonStyle = (thrustDirection: number): CSSProperties => {\n\treturn {\n\t\tposition: 'absolute',\n\t\tbottom: 12,\n\t\twidth: THRUST_WIDTH,\n\t\ttransform: `rotateZ(${-thrustDirection * 180 / Math.PI}deg)`,\n\t};\n};\nconst thrustParticleExistenceFunction = (time: number) => {\n\treturn (THRUST_PARTICLE_DURATION - time) / THRUST_PARTICLE_DURATION;\n};\nconst getThrustParticle = (time: number) => (\n\t<ThrustParticle lifecycle={time / THRUST_PARTICLE_DURATION}/>\n);\nconst thrustParticleInitialPosition = () => {\n\treturn { x: Math.random() * THRUST_WIDTH, y: Math.random() * 20 };\n};\nconst thrustParticlesConfig = (thrustStrength: number): ParticlesConfig => {\n\treturn {\n\t\tnumberOfParticles: thrustStrength * THRUST_PARTICLE_COUNT,\n\t\tparticleDurationEstimate: THRUST_PARTICLE_DURATION,\n\t\texistenceFunction: thrustParticleExistenceFunction,\n\t\tgenerateParticleComponent: getThrustParticle,\n\t\tupdatePosition: thrustParticleUpdatePosition,\n\t\tinitialPosition: thrustParticleInitialPosition,\n\t};\n};\n\nexport default class Rocket extends React.Component<Props, State> {\n\trender() {\n\t\tconst rocketStyle: CSSProperties = {\n\t\t\talignItems: 'center',\n\t\t\tjustifyContent: 'center',\n\t\t\tdisplay: 'flex',\n\t\t\tobjectFit: 'contain',\n\t\t\t...this.props.style,\n\t\t};\n\t\treturn (\n\t\t\t<div className={'rocket'} style={rocketStyle}>\n\t\t\t\t<img src={rocketImage} style={{\n\t\t\t\t\tmaxWidth: '100%',\n\t\t\t\t\tmaxHeight: '100%',\n\t\t\t\t}}/>\n\t\t\t\t<FlightInfoDisplay\n\t\t\t\t\tspeed={Math.round(this.props.rocket.state.velocity.magnitude)}\n\t\t\t\t\theight={Math.round(getHeight(this.props.rocket))}\n\t\t\t\t\trocketPosition={this.props.rocket.state.position}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\twidth: '120px',\n\t\t\t\t\t\ttop: '50%',\n\t\t\t\t\t\tleft: '100%',\n\t\t\t\t\t\ttransform: 'translate(10px, -50%)',\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<VelocityIndicator\n\t\t\t\t\tarrowInnerRadius={180}\n\t\t\t\t\tarrowOuterRadius={280}\n\t\t\t\t\tangularPosition={\n\t\t\t\t\t\tthis.props.rocket.state.velocity.angle\n\t\t\t\t\t\t\t- this.props.rocket.state.angularPosition\n\t\t\t\t\t\t\t+ Math.PI / 2\n\t\t\t\t\t}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Particles style={{\n\t\t\t\t\t...thrustParticlesCommonStyle(this.props.rocket.thrustDirection),\n\t\t\t\t\tleft: THRUST_MARGIN,\n\t\t\t\t}} config={thrustParticlesConfig(this.props.rocket.thrustStrength)}/>\n\t\t\t\t<Particles style={{\n\t\t\t\t\t...thrustParticlesCommonStyle(this.props.rocket.thrustDirection),\n\t\t\t\t\tright: THRUST_MARGIN,\n\t\t\t\t}} config={thrustParticlesConfig(this.props.rocket.thrustStrength)}/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { CSSProperties } from 'react';\nimport { randomNumberBetween } from '../../utils';\n\ninterface Props {\n\tdensity: number;\n\tminSize: number;\n\tmaxSize: number;\n\tstyle?: CSSProperties;\n}\n\ninterface State {\n\tstars: JSX.Element[] | null;\n}\n\nexport default class Stars extends React.Component<Props, State> {\n\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tstars: null,\n\t\t};\n\t}\n\n\trender() {\n\t\tconst containerStyle: CSSProperties = {\n\t\t\t...this.props.style,\n\t\t};\n\t\treturn (\n\t\t\t<div style={containerStyle} ref={(el) => {\n\t\t\t\tif (el && this.state.stars === null) {\n\t\t\t\t\tconst width = el.clientWidth, height = el.clientHeight;\n\t\t\t\t\tconst stars: JSX.Element[] = [];\n\t\t\t\t\tconst numStars = this.props.density * width * height / 10000;\n\t\t\t\t\tfor (let i = 0; i < numStars; i++) {\n\t\t\t\t\t\tconst size = randomNumberBetween(this.props.minSize, this.props.maxSize);\n\t\t\t\t\t\tstars.push(\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\t\ttop: Math.random() * height,\n\t\t\t\t\t\t\t\t\tleft: Math.random() * width,\n\t\t\t\t\t\t\t\t\twidth: size,\n\t\t\t\t\t\t\t\t\theight: size,\n\t\t\t\t\t\t\t\t\tborderRadius: size / 2,\n\t\t\t\t\t\t\t\t\tbackgroundColor: `rgba(255, 255, 255, ${randomNumberBetween(0.3, 0.7)})`,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>,\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tstars: stars,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}}>\n\t\t\t\t{this.state.stars}\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { CSSProperties } from 'react';\nimport { EARTH_RADIUS } from '../../models/bodies/constants';\nimport RocketModel from '../../models/bodies/Rocket';\nimport RocketElement from './Rocket';\nimport Stars from './Stars';\n\ninterface Props {\n\trocket: RocketModel;\n\tstyle?: CSSProperties;\n}\ninterface State {\n\theight: number;\n\trocketImageAngle: number; // angle by which we rotate the rocket in degrees. positive = clockwise.\n}\n\nconst DEFAULT_STATE: State = {\n\theight: 0,\n\trocketImageAngle: 0,\n};\n\nconst ROCKET_HEIGHT = 350;\nconst MAX_HEIGHT_COLOR = 20000;\n\nfunction getLightStrength(height: number): number {\n\tif (height < 0) return 1;\n\tif (height > MAX_HEIGHT_COLOR) return 0;\n\treturn 1 - height / MAX_HEIGHT_COLOR;\n}\n\nexport default class PilotView extends React.Component<Props, State> {\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.state = DEFAULT_STATE;\n\t}\n\n\tstatic getDerivedStateFromProps(props: Props) {\n\t\tconst height = props.rocket.state.position.magnitude - EARTH_RADIUS;\n\t\tconst rocketImageAngle =\n\t\t\t(- props.rocket.state.angularPosition + props.rocket.state.position.angle)\n\t\t\t* 180 / Math.PI;\n\t\treturn {\n\t\t\theight: height,\n\t\t\trocketImageAngle: rocketImageAngle,\n\t\t};\n\t}\n\n\trender() {\n\t\tconst lightStrength = getLightStrength(this.state.height);\n\t\tconst containerStyle: CSSProperties = {\n\t\t\tbackgroundColor: `rgba(\n\t\t\t\t${lightStrength * 130},\n\t\t\t\t${lightStrength * 200},\n\t\t\t\t${lightStrength * 255},\n\t\t\t\t1.0)\n\t\t\t`,\n\t\t\twidth: '100%',\n\t\t\theight: '100%',\n\t\t};\n\t\tconst landStyle: CSSProperties = {\n\t\t\tposition: 'absolute',\n\t\t\tbackgroundColor: '#940',\n\t\t\ttop: '50%',\n\t\t\twidth: '100%',\n\t\t\theight: '100%',\n\t\t\ttransform: `translate(0, ${ROCKET_HEIGHT / 2 + this.state.height}px)`,\n\t\t\tborderTop: '5px solid black',\n\t\t};\n\t\tconst rocketStyle: CSSProperties = {\n\t\t\tposition: 'absolute',\n\t\t\theight: `${ROCKET_HEIGHT}px`,\n\t\t\ttop: '50%',\n\t\t\tleft: '50%',\n\t\t\ttransform: `\n\t\t\t\ttranslate(-50%, -50%) \n\t\t\t\trotateZ(${this.state.rocketImageAngle}deg)\n\t\t\t`,\n\t\t};\n\t\treturn (\n\t\t\t<div className={'pilot-view'} style={containerStyle}>\n\t\t\t\t<Stars density={0.5} minSize={1} maxSize={10} style={{ height: '100%', width: '100%' }}/>\n\t\t\t\t<div className={'land'} style={landStyle}/>\n\t\t\t\t<RocketElement rocket={this.props.rocket} style={rocketStyle} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n","enum KeyState {\n\tup,\n\tdown,\n}\n\nexport default class KeyboardStates {\n\tkeyStates: { [key: string]: KeyState } = {};\n\n\taddKey(\n\t\tkey: string, downCallback?: (event: KeyboardEvent) => void,\n\t\tupCallback?: (event: KeyboardEvent) => void,\n\t\tholdCallback?: (event: KeyboardEvent) => void,\n\t) {\n\t\tif (key in Object.keys(this.keyStates)) return;\n\t\tthis.keyStates[key] = KeyState.up;\n\n\t\tdocument.addEventListener('keydown', (event: KeyboardEvent) => {\n\t\t\tif (event.key === key) {\n\t\t\t\tif (this.keyStates[key] !== KeyState.down) {\n\t\t\t\t\tthis.keyStates[key] = KeyState.down;\n\t\t\t\t\tif (downCallback) downCallback(event);\n\t\t\t\t} else {\n\t\t\t\t\tif (holdCallback) holdCallback(event);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tdocument.addEventListener('keyup', (event: KeyboardEvent) => {\n\t\t\tif (event.key === key) {\n\t\t\t\tif (this.keyStates[key] !== KeyState.up) {\n\t\t\t\t\tthis.keyStates[key] = KeyState.up;\n\t\t\t\t\tif (upCallback) upCallback(event);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n","import Body from './Body';\nimport Vector2D from './Vector2D';\n\nconst GRAVITATIONAL_CONSTANT = 6.67408 * 10 ** (-11);\n\nexport default class Simulator {\n\tbodies: Body[] = [];\n\n\tsetBodies(...bodies: Body[]) {\n\t\tthis.bodies = bodies;\n\t}\n\n\tcalculateForces() {\n\t\tconst forces: Vector2D[] = this.bodies.map((massiveBody, index) => {\n\t\t\tlet force: Vector2D = new Vector2D(0, 0);\n\n\t\t\tfor (let i = 0; i < this.bodies.length; i++) {\n\t\t\t\tif (index === i) continue;\n\t\t\t\tconst otherBody = this.bodies[i];\n\t\t\t\tconst vectorToOtherBody = massiveBody.state.position.vectorTo(otherBody.state.position);\n\t\t\t\tconst forceMagnitude =\n\t\t\t\tGRAVITATIONAL_CONSTANT * massiveBody.state.mass * otherBody.state.mass\n\t\t\t\t/ vectorToOtherBody.magnitude ** 2;\n\n\t\t\t\tconst additionalForce = vectorToOtherBody.withMagnitude(forceMagnitude);\n\t\t\t\tforce = Vector2D.sum(force, additionalForce);\n\t\t\t}\n\t\t\treturn force;\n\t\t});\n\t\treturn forces;\n\t}\n\n\trollForward(dt: number) {\n\t\tconst forces = this.calculateForces();\n\t\tfor (let index = 0; index < this.bodies.length; index++) {\n\t\t\tconst massiveBody = this.bodies[index];\n\t\t\tconst newState = massiveBody.getNewState(\n\t\t\t\tdt,\n\t\t\t\tVector2D.sum(forces[index], massiveBody.additionalForce),\n\t\t\t\tmassiveBody.additionalTorque,\n\t\t\t);\n\n\t\t\tlet willCollide = false;\n\t\t\tfor (let i = 0; i < this.bodies.length; i++) {\n\t\t\t\tif (index === i ) continue;\n\n\t\t\t\tconst otherBody = this.bodies[i];\n\t\t\t\tif (otherBody.boundaryFunction === undefined) continue;\n\n\t\t\t\tfor (let j = 0; j < massiveBody.testPoints.length; j++) {\n\t\t\t\t\tconst testPoint = Vector2D.sum(newState.position, massiveBody.testPoints[j]);\n\t\t\t\t\tconst positionFromOtherBody = otherBody.state.position.vectorTo(testPoint);\n\t\t\t\t\tif (otherBody.boundaryFunction(positionFromOtherBody)) {\n\t\t\t\t\t\twillCollide = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (willCollide) {\n\t\t\t\tif (massiveBody.collisionHandler) massiveBody.collisionHandler();\n\t\t\t} else {\n\t\t\t\tmassiveBody.state = newState;\n\t\t\t}\n\t\t}\n\t}\n}\n","import Vector2D from './Vector2D';\n\ninterface BodyState {\n\tmass: number;\n\tangularMomentOfInertia: number;\n\tposition: Vector2D;\n\tvelocity: Vector2D;\n\tangularPosition: number;\n\tangularVelocity: number;\n}\n\nexport default abstract class Body {\n\tstate: BodyState = {\n\t\tmass: 1000,\n\t\tangularMomentOfInertia: 1000,\n\t\tposition: Vector2D.zero(),\n\t\tvelocity: Vector2D.zero(),\n\t\tangularPosition: 0, // right = 0, top = pi/2, left = pi, bottom = -pi/2 or 3pi/2\n\t\tangularVelocity: 0, // positive anti-clockwise\n\t};\n\n\tcanMove: boolean = true;\n\n\ttestPoints: Vector2D[] = [];\n\n\tabstract get additionalForce(): Vector2D;\n\n\tabstract get additionalTorque(): number;\n\n\tcollisionHandler?: () => void;\n\n\tboundaryFunction?: (offsetFromBodyPosition: Vector2D) => boolean; // true if inside, false if outside\n\n\tgetNewState(dt: number, force: Vector2D, torque: number): BodyState {\n\t\tconst acceleration = force.scaled(1 / this.state.mass);\n\t\tconst angularAcceleration = torque / this.state.angularMomentOfInertia;\n\n\t\tconst positionDelta = Vector2D.sum(this.state.velocity.scaled(dt), acceleration.scaled(0.5 * dt ** 2));\n\t\tconst velocityDelta = acceleration.scaled(dt);\n\t\tconst angularPositionDelta = this.state.angularVelocity * dt + 0.5 * angularAcceleration * dt ** 2;\n\t\tconst angularVelocityDelta = angularAcceleration * dt;\n\n\t\treturn {\n\t\t\tmass: this.state.mass,\n\t\t\tangularMomentOfInertia: this.state.angularMomentOfInertia,\n\t\t\tposition: Vector2D.sum(this.state.position, positionDelta),\n\t\t\tvelocity: Vector2D.sum(this.state.velocity, velocityDelta),\n\t\t\tangularPosition: this.state.angularPosition + angularPositionDelta,\n\t\t\tangularVelocity: this.state.angularVelocity + angularVelocityDelta,\n\t\t};\n\t}\n}\n","import Body from '../Body';\nimport Vector2D from '../Vector2D';\nimport { EARTH_MASS, EARTH_RADIUS } from './constants';\n\nexport default class Earth extends Body {\n\tget additionalForce() { return Vector2D.zero(); }\n\n\tget additionalTorque() { return 0; }\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state.mass = EARTH_MASS;\n\n\t\tthis.boundaryFunction = (offset: Vector2D) => offset.magnitude < EARTH_RADIUS;\n\t\tthis.canMove = false;\n\t}\n}\n","import Body from '../Body';\nimport Vector2D from '../Vector2D';\nimport { EARTH_RADIUS, ROCKET_MAX_THRUST } from '../bodies/constants';\nimport { ROCKET_MASS, ROCKET_SIZE } from '../bodies/constants';\n\nexport default class Rocket extends Body {\n\n\tget additionalForce() { return this.thrust; }\n\n\tget thrust(): Vector2D { return this.rocketDirection.scaled(this.thrustStrength * ROCKET_MAX_THRUST); }\n\n\t_thrustStrength: number = 0;\n\n\tget thrustStrength(): number { return this._thrustStrength; }\n\n\tset thrustStrength(value: number) {\n\t\tif (value < 0) throw new Error('thrustStrength cannot be less than 0');\n\t\tif (value > 1) throw new Error('thrustStrength cannot be greater than 1');\n\t\tthis._thrustStrength = value;\n\t}\n\n\tget additionalTorque() {\n\t\treturn this.thrust.magnitude * 20 * (-Math.sin(this.thrustDirection));\n\t}\n\n\t_thrustDirection: number = 0;\n\n\tget thrustDirection(): number { return this._thrustDirection; }\n\n\tset thrustDirection(value: number) {\n\t\tif (value < -Math.PI / 2) throw new Error('torqueStrength cannot be less than -pi/2');\n\t\tif (value > Math.PI / 2) throw new Error('torqueStrength cannot be greater than pi/2');\n\t\tthis._thrustDirection = value;\n\t}\n\n\tget rocketDirection(): Vector2D {\n\t\tconst x = Math.cos(this.state.angularPosition);\n\t\tconst y = Math.sin(this.state.angularPosition);\n\t\treturn new Vector2D(x, y);\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state.mass = ROCKET_MASS;\n\t\tthis.state.angularMomentOfInertia = 10 ** 6;\n\t\tthis.state.position = new Vector2D(0, EARTH_RADIUS + 300);\n\t\tthis.state.velocity = Vector2D.zero();\n\t\tthis.state.angularPosition = Math.PI / 2;\n\n\t\tthis.boundaryFunction = (offset: Vector2D) => {\n\t\t\treturn offset.x > -ROCKET_SIZE / 2 && offset.x < ROCKET_SIZE / 2\n\t\t\t&& offset.y > -ROCKET_SIZE / 2 && offset.y < ROCKET_SIZE / 2;\n\t\t};\n\t\tthis.testPoints = [\n\t\t\tnew Vector2D(-ROCKET_SIZE / 2, -ROCKET_SIZE / 2),\n\t\t\tnew Vector2D(-ROCKET_SIZE / 2, ROCKET_SIZE / 2),\n\t\t\tnew Vector2D(ROCKET_SIZE / 2, ROCKET_SIZE / 2),\n\t\t\tnew Vector2D(ROCKET_SIZE / 2, -ROCKET_SIZE / 2),\n\t\t];\n\t}\n}\n","const themeColors = {\n\tblue: {\n\t\txLight: '#A4CCFF',\n\t\tlight: '#45A5FF',\n\t\tmediumLight: '#1080FF',\n\t\tmedium: '#0900FF',\n\t\tmediumDark: '#0700BD',\n\t\tdark: '#05008F',\n\t\txDark: '#030056',\n\t},\n} as const;\n\nexport default themeColors;\n","import React, { CSSProperties } from 'react';\nimport themeColors from '../../constants/colors';\n\ninterface Props {\n\tonClick?: () => void;\n\tonTouchStart?: () => void;\n\tonTouchEnd?: () => void;\n\tstyle?: CSSProperties;\n}\ninterface State {\n\tisTouched: boolean;\n}\nconst BACKGROUND_COLOR_DEFAULT = themeColors.blue.light;\nconst BACKGROUND_COLOR_SELECTED = themeColors.blue.medium;\nconst DEFAULT_STATE: State = {\n\tisTouched: false,\n};\n\nexport default class GenericButton extends React.Component<Props, State> {\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.state = DEFAULT_STATE;\n\t}\n\n\trender() {\n\t\tconst containerStyle: CSSProperties = {\n\t\t\tborderRadius: 10,\n\t\t\tpadding: 10,\n\t\t\tbackgroundColor: this.state.isTouched ? BACKGROUND_COLOR_SELECTED : BACKGROUND_COLOR_DEFAULT,\n\t\t\tmargin: 'auto',\n\t\t\tcolor: 'white',\n\t\t\t...this.props.style,\n\t\t};\n\t\treturn (\n\t\t\t<div\n\t\t\t\tstyle={containerStyle}\n\t\t\t\tonClick={this.props.onClick}\n\t\t\t\tonTouchStart={() => {\n\t\t\t\t\tif (this.props.onTouchStart) this.props.onTouchStart();\n\t\t\t\t\tthis.setState({ isTouched: true });\n\t\t\t\t}}\n\t\t\t\tonTouchEnd={() => {\n\t\t\t\t\tif (this.props.onTouchEnd) this.props.onTouchEnd();\n\t\t\t\t\tthis.setState({ isTouched: false });\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{this.props.children}\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { CSSProperties } from 'react';\nimport Vector2D from '../models/Vector2D';\nimport PilotView from './PilotView';\nimport Simulator from '../models/Simulator';\nimport Earth from '../models/bodies/Earth';\nimport Rocket from '../models/bodies/Rocket';\nimport { EARTH_RADIUS } from '../models/bodies/constants';\nimport KeyboardStates from '../utils/KeyboardStates';\nimport GenericButton from './generic/GenericButton';\n\ninterface Props {\n\tstyle?: CSSProperties;\n}\ninterface State {\n\trocketPosition: Vector2D;\n\tsimulationIsRunning: boolean;\n}\n\nconst DEFAULT_STATE: State = {\n\trocketPosition: new Vector2D(0, EARTH_RADIUS),\n\tsimulationIsRunning: false,\n};\nconst SIMULATION_DT = 0.01;\n\nexport default class SimulatorScreen extends React.Component<Props, State> {\n\n\tsimulator: Simulator;\n\n\tsimulatorInterval?: NodeJS.Timer;\n\n\tearth: Earth = new Earth();\n\n\trocket: Rocket = new Rocket();\n\n\tcomponentDidMount() {\n\t\tthis.setState({ simulationIsRunning: true });\n\n\t\tthis.simulatorInterval = setInterval(() => {\n\t\t\tif (!this.state.simulationIsRunning) return;\n\t\t\tthis.simulator.rollForward(SIMULATION_DT);\n\t\t\tthis.setState({\n\t\t\t\trocketPosition: this.rocket.state.position,\n\t\t\t});\n\t\t}, SIMULATION_DT * 1000);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif (this.simulatorInterval) clearInterval(this.simulatorInterval);\n\t}\n\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.simulator = new Simulator();\n\t\tthis.simulator.setBodies(this.rocket, this.earth);\n\t\tthis.state = DEFAULT_STATE;\n\t\tthis.rocket.collisionHandler = () => {\n\t\t\tif (this.rocket.state.velocity.magnitude < 10) {\n\t\t\t\tthis.rocket.state.velocity = Vector2D.zero();\n\t\t\t} else {\n\t\t\t\tthis.rocket.canMove = false;\n\t\t\t}\n\t\t};\n\n\t\tthis.addKeyboardListeners();\n\t}\n\n\taddKeyboardListeners() {\n\t\tconst keyboardListener = new KeyboardStates();\n\t\tkeyboardListener.addKey(\n\t\t\t'ArrowUp',\n\t\t\t() => { this.setFullThrust(); },\n\t\t\t() => { this.setNoThrust(); },\n\t\t);\n\t\tkeyboardListener.addKey(\n\t\t\t'ArrowLeft',\n\t\t\t() => { this.setTorqueAnticlockwise(); },\n\t\t\t() => { this.setNoTorque(); },\n\t\t);\n\t\tkeyboardListener.addKey(\n\t\t\t'ArrowRight',\n\t\t\t() => { this.setTorqueClockwise(); },\n\t\t\t() => { this.setNoTorque(); },\n\t\t);\n\t}\n\n\tsetFullThrust() { this.rocket.thrustStrength = 1; }\n\n\tsetNoThrust() { this.rocket.thrustStrength = 0; }\n\n\tsetTorqueAnticlockwise() { this.rocket.thrustDirection = - Math.PI / 10; }\n\n\tsetTorqueClockwise() { this.rocket.thrustDirection = Math.PI / 10; }\n\n\tsetNoTorque() {this.rocket.thrustDirection = 0; }\n\n\tresetSimulation() {\n\t\tthis.rocket = new Rocket();\n\t\tthis.earth = new Earth();\n\t\tthis.simulator.setBodies(this.rocket, this.earth);\n\t}\n\n\tpauseSimulation() {\n\t\tthis.setState((prev) => {return { simulationIsRunning: !prev.simulationIsRunning };});\n\t}\n\n\trender() {\n\t\tconst containerStyle: CSSProperties = {\n\t\t\twidth: '100%',\n\t\t\theight: '100%',\n\t\t};\n\t\tconst simulationCoreButtonsContainer: CSSProperties = {\n\t\t\ttop: '10px',\n\t\t\tleft: '10px',\n\t\t};\n\t\tconst arrowButtonsContainer: CSSProperties = {\n\t\t\tbottom: '10px',\n\t\t\tright: '10px',\n\t\t};\n\t\tconst buttonsContainer: CSSProperties = {\n\t\t\tposition: 'absolute',\n\t\t\tdisplay: 'flex',\n\t\t\tflexDirection: 'row',\n\t\t\tgap: '10px',\n\t\t};\n\t\treturn (\n\t\t\t<div className={'simulator-screen'} style={containerStyle}>\n\t\t\t\t<PilotView rocket={this.rocket}/>\n\t\t\t\t<div style={{ ...buttonsContainer, ...simulationCoreButtonsContainer }}>\n\t\t\t\t\t<GenericButton style={{\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t}} onClick={() => { this.resetSimulation(); }}>\n\t\t\t\t\tReset\n\t\t\t\t\t</GenericButton>\n\t\t\t\t\t<GenericButton style={{\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tleft: 100,\n\t\t\t\t\t}} onClick={() => { this.pauseSimulation(); }}>\n\t\t\t\t\t\t{this.state.simulationIsRunning ? 'Pause' : 'Resume'}\n\t\t\t\t\t</GenericButton>\n\t\t\t\t</div>\n\t\t\t\t<div style={{ ...buttonsContainer, ...arrowButtonsContainer }}>\n\t\t\t\t\t<GenericButton\n\t\t\t\t\t\tonTouchStart={this.setTorqueAnticlockwise.bind(this)}\n\t\t\t\t\t\tonTouchEnd={this.setNoTorque.bind(this)}\n\t\t\t\t\t>\n\t\t\t\t\t\tLeft\n\t\t\t\t\t</GenericButton>\n\t\t\t\t\t<GenericButton\n\t\t\t\t\t\tonTouchStart={this.setFullThrust.bind(this)}\n\t\t\t\t\t\tonTouchEnd={this.setNoThrust.bind(this)}\n\t\t\t\t\t>\n\t\t\t\t\t\tThrust\n\t\t\t\t\t</GenericButton>\n\t\t\t\t\t<GenericButton\n\t\t\t\t\t\tonTouchStart={this.setTorqueClockwise.bind(this)}\n\t\t\t\t\t\tonTouchEnd={this.setNoTorque.bind(this)}\n\t\t\t\t\t>\n\t\t\t\t\t\tRight\n\t\t\t\t\t</GenericButton>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import './css/styles.css';\nimport React from 'react';\nimport SimulatorScreen from './components/SimulatorScreen';\n\nfunction App() {\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div id='content'>\n\t\t\t\t<SimulatorScreen/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({\n\t\t\tgetCLS, getFID, getFCP, getLCP, getTTFB,\n\t\t}) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}